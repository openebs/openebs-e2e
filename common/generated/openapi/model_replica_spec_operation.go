/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReplicaSpecOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicaSpecOperation{}

// ReplicaSpecOperation Record of the operation in progress
type ReplicaSpecOperation struct {
	// Record of the operation
	Operation string `json:"operation"`
	// Result of the operation
	Result *bool `json:"result,omitempty"`
}

type _ReplicaSpecOperation ReplicaSpecOperation

// NewReplicaSpecOperation instantiates a new ReplicaSpecOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaSpecOperation(operation string) *ReplicaSpecOperation {
	this := ReplicaSpecOperation{}
	this.Operation = operation
	return &this
}

// NewReplicaSpecOperationWithDefaults instantiates a new ReplicaSpecOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaSpecOperationWithDefaults() *ReplicaSpecOperation {
	this := ReplicaSpecOperation{}
	return &this
}

// GetOperation returns the Operation field value
func (o *ReplicaSpecOperation) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *ReplicaSpecOperation) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *ReplicaSpecOperation) SetOperation(v string) {
	o.Operation = v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *ReplicaSpecOperation) GetResult() bool {
	if o == nil || IsNil(o.Result) {
		var ret bool
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicaSpecOperation) GetResultOk() (*bool, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *ReplicaSpecOperation) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given bool and assigns it to the Result field.
func (o *ReplicaSpecOperation) SetResult(v bool) {
	o.Result = &v
}

func (o ReplicaSpecOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicaSpecOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operation"] = o.Operation
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

func (o *ReplicaSpecOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplicaSpecOperation := _ReplicaSpecOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplicaSpecOperation)

	if err != nil {
		return err
	}

	*o = ReplicaSpecOperation(varReplicaSpecOperation)

	return err
}

type NullableReplicaSpecOperation struct {
	value *ReplicaSpecOperation
	isSet bool
}

func (v NullableReplicaSpecOperation) Get() *ReplicaSpecOperation {
	return v.value
}

func (v *NullableReplicaSpecOperation) Set(val *ReplicaSpecOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaSpecOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaSpecOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaSpecOperation(val *ReplicaSpecOperation) *NullableReplicaSpecOperation {
	return &NullableReplicaSpecOperation{value: val, isSet: true}
}

func (v NullableReplicaSpecOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaSpecOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


