/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// NexusShareProtocol Nexus Share Protocol
type NexusShareProtocol string

// List of NexusShareProtocol
const (
	NEXUSSHAREPROTOCOL_NVMF  NexusShareProtocol = "nvmf"
	NEXUSSHAREPROTOCOL_ISCSI NexusShareProtocol = "iscsi"
)

// All allowed values of NexusShareProtocol enum
var AllowedNexusShareProtocolEnumValues = []NexusShareProtocol{
	"nvmf",
	"iscsi",
}

func (v *NexusShareProtocol) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NexusShareProtocol(value)
	for _, existing := range AllowedNexusShareProtocolEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NexusShareProtocol", value)
}

// NewNexusShareProtocolFromValue returns a pointer to a valid NexusShareProtocol
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNexusShareProtocolFromValue(v string) (*NexusShareProtocol, error) {
	ev := NexusShareProtocol(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NexusShareProtocol: valid values are %v", v, AllowedNexusShareProtocolEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NexusShareProtocol) IsValid() bool {
	for _, existing := range AllowedNexusShareProtocolEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NexusShareProtocol value
func (v NexusShareProtocol) Ptr() *NexusShareProtocol {
	return &v
}

type NullableNexusShareProtocol struct {
	value *NexusShareProtocol
	isSet bool
}

func (v NullableNexusShareProtocol) Get() *NexusShareProtocol {
	return v.value
}

func (v *NullableNexusShareProtocol) Set(val *NexusShareProtocol) {
	v.value = val
	v.isSet = true
}

func (v NullableNexusShareProtocol) IsSet() bool {
	return v.isSet
}

func (v *NullableNexusShareProtocol) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNexusShareProtocol(val *NexusShareProtocol) *NullableNexusShareProtocol {
	return &NullableNexusShareProtocol{value: val, isSet: true}
}

func (v NullableNexusShareProtocol) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNexusShareProtocol) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

