/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateVolumeBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVolumeBody{}

// CreateVolumeBody Create Volume Body
type CreateVolumeBody struct {
	Policy VolumePolicy `json:"policy"`
	// number of storage replicas
	Replicas int32 `json:"replicas"`
	// size of the volume in bytes
	Size int64 `json:"size"`
	// flag indicating whether or not the volume is thin provisioned
	Thin bool `json:"thin"`
	Topology *Topology `json:"topology,omitempty"`
	// Optionally used to store custom volume information
	Labels *map[string]string `json:"labels,omitempty"`
	// Affinity Group related information.
	AffinityGroup *AffinityGroup `json:"affinity_group,omitempty"`
	// Max Snapshots limit per volume.
	MaxSnapshots *int32 `json:"max_snapshots,omitempty"`
}

type _CreateVolumeBody CreateVolumeBody

// NewCreateVolumeBody instantiates a new CreateVolumeBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVolumeBody(policy VolumePolicy, replicas int32, size int64, thin bool) *CreateVolumeBody {
	this := CreateVolumeBody{}
	this.Policy = policy
	this.Replicas = replicas
	this.Size = size
	this.Thin = thin
	return &this
}

// NewCreateVolumeBodyWithDefaults instantiates a new CreateVolumeBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVolumeBodyWithDefaults() *CreateVolumeBody {
	this := CreateVolumeBody{}
	return &this
}

// GetPolicy returns the Policy field value
func (o *CreateVolumeBody) GetPolicy() VolumePolicy {
	if o == nil {
		var ret VolumePolicy
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetPolicyOk() (*VolumePolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *CreateVolumeBody) SetPolicy(v VolumePolicy) {
	o.Policy = v
}

// GetReplicas returns the Replicas field value
func (o *CreateVolumeBody) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *CreateVolumeBody) SetReplicas(v int32) {
	o.Replicas = v
}

// GetSize returns the Size field value
func (o *CreateVolumeBody) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *CreateVolumeBody) SetSize(v int64) {
	o.Size = v
}

// GetThin returns the Thin field value
func (o *CreateVolumeBody) GetThin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Thin
}

// GetThinOk returns a tuple with the Thin field value
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetThinOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Thin, true
}

// SetThin sets field value
func (o *CreateVolumeBody) SetThin(v bool) {
	o.Thin = v
}

// GetTopology returns the Topology field value if set, zero value otherwise.
func (o *CreateVolumeBody) GetTopology() Topology {
	if o == nil || IsNil(o.Topology) {
		var ret Topology
		return ret
	}
	return *o.Topology
}

// GetTopologyOk returns a tuple with the Topology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetTopologyOk() (*Topology, bool) {
	if o == nil || IsNil(o.Topology) {
		return nil, false
	}
	return o.Topology, true
}

// HasTopology returns a boolean if a field has been set.
func (o *CreateVolumeBody) HasTopology() bool {
	if o != nil && !IsNil(o.Topology) {
		return true
	}

	return false
}

// SetTopology gets a reference to the given Topology and assigns it to the Topology field.
func (o *CreateVolumeBody) SetTopology(v Topology) {
	o.Topology = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CreateVolumeBody) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateVolumeBody) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *CreateVolumeBody) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetAffinityGroup returns the AffinityGroup field value if set, zero value otherwise.
func (o *CreateVolumeBody) GetAffinityGroup() AffinityGroup {
	if o == nil || IsNil(o.AffinityGroup) {
		var ret AffinityGroup
		return ret
	}
	return *o.AffinityGroup
}

// GetAffinityGroupOk returns a tuple with the AffinityGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetAffinityGroupOk() (*AffinityGroup, bool) {
	if o == nil || IsNil(o.AffinityGroup) {
		return nil, false
	}
	return o.AffinityGroup, true
}

// HasAffinityGroup returns a boolean if a field has been set.
func (o *CreateVolumeBody) HasAffinityGroup() bool {
	if o != nil && !IsNil(o.AffinityGroup) {
		return true
	}

	return false
}

// SetAffinityGroup gets a reference to the given AffinityGroup and assigns it to the AffinityGroup field.
func (o *CreateVolumeBody) SetAffinityGroup(v AffinityGroup) {
	o.AffinityGroup = &v
}

// GetMaxSnapshots returns the MaxSnapshots field value if set, zero value otherwise.
func (o *CreateVolumeBody) GetMaxSnapshots() int32 {
	if o == nil || IsNil(o.MaxSnapshots) {
		var ret int32
		return ret
	}
	return *o.MaxSnapshots
}

// GetMaxSnapshotsOk returns a tuple with the MaxSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVolumeBody) GetMaxSnapshotsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSnapshots) {
		return nil, false
	}
	return o.MaxSnapshots, true
}

// HasMaxSnapshots returns a boolean if a field has been set.
func (o *CreateVolumeBody) HasMaxSnapshots() bool {
	if o != nil && !IsNil(o.MaxSnapshots) {
		return true
	}

	return false
}

// SetMaxSnapshots gets a reference to the given int32 and assigns it to the MaxSnapshots field.
func (o *CreateVolumeBody) SetMaxSnapshots(v int32) {
	o.MaxSnapshots = &v
}

func (o CreateVolumeBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVolumeBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policy"] = o.Policy
	toSerialize["replicas"] = o.Replicas
	toSerialize["size"] = o.Size
	toSerialize["thin"] = o.Thin
	if !IsNil(o.Topology) {
		toSerialize["topology"] = o.Topology
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.AffinityGroup) {
		toSerialize["affinity_group"] = o.AffinityGroup
	}
	if !IsNil(o.MaxSnapshots) {
		toSerialize["max_snapshots"] = o.MaxSnapshots
	}
	return toSerialize, nil
}

func (o *CreateVolumeBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"policy",
		"replicas",
		"size",
		"thin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateVolumeBody := _CreateVolumeBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateVolumeBody)

	if err != nil {
		return err
	}

	*o = CreateVolumeBody(varCreateVolumeBody)

	return err
}

type NullableCreateVolumeBody struct {
	value *CreateVolumeBody
	isSet bool
}

func (v NullableCreateVolumeBody) Get() *CreateVolumeBody {
	return v.value
}

func (v *NullableCreateVolumeBody) Set(val *CreateVolumeBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVolumeBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVolumeBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVolumeBody(val *CreateVolumeBody) *NullableCreateVolumeBody {
	return &NullableCreateVolumeBody{value: val, isSet: true}
}

func (v NullableCreateVolumeBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVolumeBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


