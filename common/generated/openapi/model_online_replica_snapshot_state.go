/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the OnlineReplicaSnapshotState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnlineReplicaSnapshotState{}

// OnlineReplicaSnapshotState Online ReplicaSnapshotState representation.
type OnlineReplicaSnapshotState struct {
	Uuid string `json:"uuid"`
	SourceId string `json:"source_id"`
	// storage pool identifier
	PoolId string `json:"pool_id"`
	// storage pool unique identifier
	PoolUuid string `json:"pool_uuid"`
	// Timestamp when the replica snapshot is taken on the storage system.
	Timestamp time.Time `json:"timestamp"`
	// Replica snapshot size.
	Size int64 `json:"size"`
	// Runtime size in bytes of the snapshot. Equal to the volume allocation at the time of the snapshot creation. It may grow larger if any of its predecessors are deleted.
	AllocatedSize int64 `json:"allocated_size"`
	// Total allocated size of all the snapshot predecessors.
	PredecessorAllocSize int64 `json:"predecessor_alloc_size"`
}

type _OnlineReplicaSnapshotState OnlineReplicaSnapshotState

// NewOnlineReplicaSnapshotState instantiates a new OnlineReplicaSnapshotState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnlineReplicaSnapshotState(uuid string, sourceId string, poolId string, poolUuid string, timestamp time.Time, size int64, allocatedSize int64, predecessorAllocSize int64) *OnlineReplicaSnapshotState {
	this := OnlineReplicaSnapshotState{}
	this.Uuid = uuid
	this.SourceId = sourceId
	this.PoolId = poolId
	this.PoolUuid = poolUuid
	this.Timestamp = timestamp
	this.Size = size
	this.AllocatedSize = allocatedSize
	this.PredecessorAllocSize = predecessorAllocSize
	return &this
}

// NewOnlineReplicaSnapshotStateWithDefaults instantiates a new OnlineReplicaSnapshotState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnlineReplicaSnapshotStateWithDefaults() *OnlineReplicaSnapshotState {
	this := OnlineReplicaSnapshotState{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *OnlineReplicaSnapshotState) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *OnlineReplicaSnapshotState) SetUuid(v string) {
	o.Uuid = v
}

// GetSourceId returns the SourceId field value
func (o *OnlineReplicaSnapshotState) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *OnlineReplicaSnapshotState) SetSourceId(v string) {
	o.SourceId = v
}

// GetPoolId returns the PoolId field value
func (o *OnlineReplicaSnapshotState) GetPoolId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetPoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolId, true
}

// SetPoolId sets field value
func (o *OnlineReplicaSnapshotState) SetPoolId(v string) {
	o.PoolId = v
}

// GetPoolUuid returns the PoolUuid field value
func (o *OnlineReplicaSnapshotState) GetPoolUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolUuid
}

// GetPoolUuidOk returns a tuple with the PoolUuid field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetPoolUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolUuid, true
}

// SetPoolUuid sets field value
func (o *OnlineReplicaSnapshotState) SetPoolUuid(v string) {
	o.PoolUuid = v
}

// GetTimestamp returns the Timestamp field value
func (o *OnlineReplicaSnapshotState) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *OnlineReplicaSnapshotState) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetSize returns the Size field value
func (o *OnlineReplicaSnapshotState) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *OnlineReplicaSnapshotState) SetSize(v int64) {
	o.Size = v
}

// GetAllocatedSize returns the AllocatedSize field value
func (o *OnlineReplicaSnapshotState) GetAllocatedSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AllocatedSize
}

// GetAllocatedSizeOk returns a tuple with the AllocatedSize field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetAllocatedSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllocatedSize, true
}

// SetAllocatedSize sets field value
func (o *OnlineReplicaSnapshotState) SetAllocatedSize(v int64) {
	o.AllocatedSize = v
}

// GetPredecessorAllocSize returns the PredecessorAllocSize field value
func (o *OnlineReplicaSnapshotState) GetPredecessorAllocSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PredecessorAllocSize
}

// GetPredecessorAllocSizeOk returns a tuple with the PredecessorAllocSize field value
// and a boolean to check if the value has been set.
func (o *OnlineReplicaSnapshotState) GetPredecessorAllocSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PredecessorAllocSize, true
}

// SetPredecessorAllocSize sets field value
func (o *OnlineReplicaSnapshotState) SetPredecessorAllocSize(v int64) {
	o.PredecessorAllocSize = v
}

func (o OnlineReplicaSnapshotState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnlineReplicaSnapshotState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uuid"] = o.Uuid
	toSerialize["source_id"] = o.SourceId
	toSerialize["pool_id"] = o.PoolId
	toSerialize["pool_uuid"] = o.PoolUuid
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["size"] = o.Size
	toSerialize["allocated_size"] = o.AllocatedSize
	toSerialize["predecessor_alloc_size"] = o.PredecessorAllocSize
	return toSerialize, nil
}

func (o *OnlineReplicaSnapshotState) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"uuid",
		"source_id",
		"pool_id",
		"pool_uuid",
		"timestamp",
		"size",
		"allocated_size",
		"predecessor_alloc_size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnlineReplicaSnapshotState := _OnlineReplicaSnapshotState{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOnlineReplicaSnapshotState)

	if err != nil {
		return err
	}

	*o = OnlineReplicaSnapshotState(varOnlineReplicaSnapshotState)

	return err
}

type NullableOnlineReplicaSnapshotState struct {
	value *OnlineReplicaSnapshotState
	isSet bool
}

func (v NullableOnlineReplicaSnapshotState) Get() *OnlineReplicaSnapshotState {
	return v.value
}

func (v *NullableOnlineReplicaSnapshotState) Set(val *OnlineReplicaSnapshotState) {
	v.value = val
	v.isSet = true
}

func (v NullableOnlineReplicaSnapshotState) IsSet() bool {
	return v.isSet
}

func (v *NullableOnlineReplicaSnapshotState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnlineReplicaSnapshotState(val *OnlineReplicaSnapshotState) *NullableOnlineReplicaSnapshotState {
	return &NullableOnlineReplicaSnapshotState{value: val, isSet: true}
}

func (v NullableOnlineReplicaSnapshotState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnlineReplicaSnapshotState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


