/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReplicaSpecOwners type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicaSpecOwners{}

// ReplicaSpecOwners Owner Resource
type ReplicaSpecOwners struct {
	Nexuses []string `json:"nexuses"`
	Volume *string `json:"volume,omitempty"`
}

type _ReplicaSpecOwners ReplicaSpecOwners

// NewReplicaSpecOwners instantiates a new ReplicaSpecOwners object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaSpecOwners(nexuses []string) *ReplicaSpecOwners {
	this := ReplicaSpecOwners{}
	this.Nexuses = nexuses
	return &this
}

// NewReplicaSpecOwnersWithDefaults instantiates a new ReplicaSpecOwners object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaSpecOwnersWithDefaults() *ReplicaSpecOwners {
	this := ReplicaSpecOwners{}
	return &this
}

// GetNexuses returns the Nexuses field value
func (o *ReplicaSpecOwners) GetNexuses() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Nexuses
}

// GetNexusesOk returns a tuple with the Nexuses field value
// and a boolean to check if the value has been set.
func (o *ReplicaSpecOwners) GetNexusesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nexuses, true
}

// SetNexuses sets field value
func (o *ReplicaSpecOwners) SetNexuses(v []string) {
	o.Nexuses = v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *ReplicaSpecOwners) GetVolume() string {
	if o == nil || IsNil(o.Volume) {
		var ret string
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicaSpecOwners) GetVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *ReplicaSpecOwners) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given string and assigns it to the Volume field.
func (o *ReplicaSpecOwners) SetVolume(v string) {
	o.Volume = &v
}

func (o ReplicaSpecOwners) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicaSpecOwners) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nexuses"] = o.Nexuses
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

func (o *ReplicaSpecOwners) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"nexuses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplicaSpecOwners := _ReplicaSpecOwners{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplicaSpecOwners)

	if err != nil {
		return err
	}

	*o = ReplicaSpecOwners(varReplicaSpecOwners)

	return err
}

type NullableReplicaSpecOwners struct {
	value *ReplicaSpecOwners
	isSet bool
}

func (v NullableReplicaSpecOwners) Get() *ReplicaSpecOwners {
	return v.value
}

func (v *NullableReplicaSpecOwners) Set(val *ReplicaSpecOwners) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaSpecOwners) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaSpecOwners) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaSpecOwners(val *ReplicaSpecOwners) *NullableReplicaSpecOwners {
	return &NullableReplicaSpecOwners{value: val, isSet: true}
}

func (v NullableReplicaSpecOwners) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaSpecOwners) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


