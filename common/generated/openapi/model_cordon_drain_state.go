/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CordonDrainState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CordonDrainState{}

// CordonDrainState The drain state
type CordonDrainState struct {
	Cordonedstate *CordonedState `json:"cordonedstate,omitempty"`
	Drainingstate *DrainState `json:"drainingstate,omitempty"`
	Drainedstate *DrainState `json:"drainedstate,omitempty"`
}

// NewCordonDrainState instantiates a new CordonDrainState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCordonDrainState() *CordonDrainState {
	this := CordonDrainState{}
	return &this
}

// NewCordonDrainStateWithDefaults instantiates a new CordonDrainState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCordonDrainStateWithDefaults() *CordonDrainState {
	this := CordonDrainState{}
	return &this
}

// GetCordonedstate returns the Cordonedstate field value if set, zero value otherwise.
func (o *CordonDrainState) GetCordonedstate() CordonedState {
	if o == nil || IsNil(o.Cordonedstate) {
		var ret CordonedState
		return ret
	}
	return *o.Cordonedstate
}

// GetCordonedstateOk returns a tuple with the Cordonedstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CordonDrainState) GetCordonedstateOk() (*CordonedState, bool) {
	if o == nil || IsNil(o.Cordonedstate) {
		return nil, false
	}
	return o.Cordonedstate, true
}

// HasCordonedstate returns a boolean if a field has been set.
func (o *CordonDrainState) HasCordonedstate() bool {
	if o != nil && !IsNil(o.Cordonedstate) {
		return true
	}

	return false
}

// SetCordonedstate gets a reference to the given CordonedState and assigns it to the Cordonedstate field.
func (o *CordonDrainState) SetCordonedstate(v CordonedState) {
	o.Cordonedstate = &v
}

// GetDrainingstate returns the Drainingstate field value if set, zero value otherwise.
func (o *CordonDrainState) GetDrainingstate() DrainState {
	if o == nil || IsNil(o.Drainingstate) {
		var ret DrainState
		return ret
	}
	return *o.Drainingstate
}

// GetDrainingstateOk returns a tuple with the Drainingstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CordonDrainState) GetDrainingstateOk() (*DrainState, bool) {
	if o == nil || IsNil(o.Drainingstate) {
		return nil, false
	}
	return o.Drainingstate, true
}

// HasDrainingstate returns a boolean if a field has been set.
func (o *CordonDrainState) HasDrainingstate() bool {
	if o != nil && !IsNil(o.Drainingstate) {
		return true
	}

	return false
}

// SetDrainingstate gets a reference to the given DrainState and assigns it to the Drainingstate field.
func (o *CordonDrainState) SetDrainingstate(v DrainState) {
	o.Drainingstate = &v
}

// GetDrainedstate returns the Drainedstate field value if set, zero value otherwise.
func (o *CordonDrainState) GetDrainedstate() DrainState {
	if o == nil || IsNil(o.Drainedstate) {
		var ret DrainState
		return ret
	}
	return *o.Drainedstate
}

// GetDrainedstateOk returns a tuple with the Drainedstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CordonDrainState) GetDrainedstateOk() (*DrainState, bool) {
	if o == nil || IsNil(o.Drainedstate) {
		return nil, false
	}
	return o.Drainedstate, true
}

// HasDrainedstate returns a boolean if a field has been set.
func (o *CordonDrainState) HasDrainedstate() bool {
	if o != nil && !IsNil(o.Drainedstate) {
		return true
	}

	return false
}

// SetDrainedstate gets a reference to the given DrainState and assigns it to the Drainedstate field.
func (o *CordonDrainState) SetDrainedstate(v DrainState) {
	o.Drainedstate = &v
}

func (o CordonDrainState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CordonDrainState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cordonedstate) {
		toSerialize["cordonedstate"] = o.Cordonedstate
	}
	if !IsNil(o.Drainingstate) {
		toSerialize["drainingstate"] = o.Drainingstate
	}
	if !IsNil(o.Drainedstate) {
		toSerialize["drainedstate"] = o.Drainedstate
	}
	return toSerialize, nil
}

type NullableCordonDrainState struct {
	value *CordonDrainState
	isSet bool
}

func (v NullableCordonDrainState) Get() *CordonDrainState {
	return v.value
}

func (v *NullableCordonDrainState) Set(val *CordonDrainState) {
	v.value = val
	v.isSet = true
}

func (v NullableCordonDrainState) IsSet() bool {
	return v.isSet
}

func (v *NullableCordonDrainState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCordonDrainState(val *CordonDrainState) *NullableCordonDrainState {
	return &NullableCordonDrainState{value: val, isSet: true}
}

func (v NullableCordonDrainState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCordonDrainState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


