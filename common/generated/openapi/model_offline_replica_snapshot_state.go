/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OfflineReplicaSnapshotState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfflineReplicaSnapshotState{}

// OfflineReplicaSnapshotState Offline ReplicaSnapshotState representation.
type OfflineReplicaSnapshotState struct {
	Uuid string `json:"uuid"`
	SourceId string `json:"source_id"`
	// storage pool identifier
	PoolId string `json:"pool_id"`
	// storage pool unique identifier
	PoolUuid string `json:"pool_uuid"`
}

type _OfflineReplicaSnapshotState OfflineReplicaSnapshotState

// NewOfflineReplicaSnapshotState instantiates a new OfflineReplicaSnapshotState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfflineReplicaSnapshotState(uuid string, sourceId string, poolId string, poolUuid string) *OfflineReplicaSnapshotState {
	this := OfflineReplicaSnapshotState{}
	this.Uuid = uuid
	this.SourceId = sourceId
	this.PoolId = poolId
	this.PoolUuid = poolUuid
	return &this
}

// NewOfflineReplicaSnapshotStateWithDefaults instantiates a new OfflineReplicaSnapshotState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfflineReplicaSnapshotStateWithDefaults() *OfflineReplicaSnapshotState {
	this := OfflineReplicaSnapshotState{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *OfflineReplicaSnapshotState) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *OfflineReplicaSnapshotState) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *OfflineReplicaSnapshotState) SetUuid(v string) {
	o.Uuid = v
}

// GetSourceId returns the SourceId field value
func (o *OfflineReplicaSnapshotState) GetSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value
// and a boolean to check if the value has been set.
func (o *OfflineReplicaSnapshotState) GetSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceId, true
}

// SetSourceId sets field value
func (o *OfflineReplicaSnapshotState) SetSourceId(v string) {
	o.SourceId = v
}

// GetPoolId returns the PoolId field value
func (o *OfflineReplicaSnapshotState) GetPoolId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolId
}

// GetPoolIdOk returns a tuple with the PoolId field value
// and a boolean to check if the value has been set.
func (o *OfflineReplicaSnapshotState) GetPoolIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolId, true
}

// SetPoolId sets field value
func (o *OfflineReplicaSnapshotState) SetPoolId(v string) {
	o.PoolId = v
}

// GetPoolUuid returns the PoolUuid field value
func (o *OfflineReplicaSnapshotState) GetPoolUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolUuid
}

// GetPoolUuidOk returns a tuple with the PoolUuid field value
// and a boolean to check if the value has been set.
func (o *OfflineReplicaSnapshotState) GetPoolUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolUuid, true
}

// SetPoolUuid sets field value
func (o *OfflineReplicaSnapshotState) SetPoolUuid(v string) {
	o.PoolUuid = v
}

func (o OfflineReplicaSnapshotState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfflineReplicaSnapshotState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uuid"] = o.Uuid
	toSerialize["source_id"] = o.SourceId
	toSerialize["pool_id"] = o.PoolId
	toSerialize["pool_uuid"] = o.PoolUuid
	return toSerialize, nil
}

func (o *OfflineReplicaSnapshotState) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"uuid",
		"source_id",
		"pool_id",
		"pool_uuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOfflineReplicaSnapshotState := _OfflineReplicaSnapshotState{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOfflineReplicaSnapshotState)

	if err != nil {
		return err
	}

	*o = OfflineReplicaSnapshotState(varOfflineReplicaSnapshotState)

	return err
}

type NullableOfflineReplicaSnapshotState struct {
	value *OfflineReplicaSnapshotState
	isSet bool
}

func (v NullableOfflineReplicaSnapshotState) Get() *OfflineReplicaSnapshotState {
	return v.value
}

func (v *NullableOfflineReplicaSnapshotState) Set(val *OfflineReplicaSnapshotState) {
	v.value = val
	v.isSet = true
}

func (v NullableOfflineReplicaSnapshotState) IsSet() bool {
	return v.isSet
}

func (v *NullableOfflineReplicaSnapshotState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfflineReplicaSnapshotState(val *OfflineReplicaSnapshotState) *NullableOfflineReplicaSnapshotState {
	return &NullableOfflineReplicaSnapshotState{value: val, isSet: true}
}

func (v NullableOfflineReplicaSnapshotState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfflineReplicaSnapshotState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


