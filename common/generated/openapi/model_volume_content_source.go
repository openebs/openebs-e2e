/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeContentSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeContentSource{}

// VolumeContentSource Volume Content Source i.e the snapshot or the volume.
type VolumeContentSource struct {
	Snapshot *SnapshotAsSource `json:"snapshot,omitempty"`
}

// NewVolumeContentSource instantiates a new VolumeContentSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeContentSource() *VolumeContentSource {
	this := VolumeContentSource{}
	return &this
}

// NewVolumeContentSourceWithDefaults instantiates a new VolumeContentSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeContentSourceWithDefaults() *VolumeContentSource {
	this := VolumeContentSource{}
	return &this
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *VolumeContentSource) GetSnapshot() SnapshotAsSource {
	if o == nil || IsNil(o.Snapshot) {
		var ret SnapshotAsSource
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeContentSource) GetSnapshotOk() (*SnapshotAsSource, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *VolumeContentSource) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given SnapshotAsSource and assigns it to the Snapshot field.
func (o *VolumeContentSource) SetSnapshot(v SnapshotAsSource) {
	o.Snapshot = &v
}

func (o VolumeContentSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeContentSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	return toSerialize, nil
}

type NullableVolumeContentSource struct {
	value *VolumeContentSource
	isSet bool
}

func (v NullableVolumeContentSource) Get() *VolumeContentSource {
	return v.value
}

func (v *NullableVolumeContentSource) Set(val *VolumeContentSource) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeContentSource) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeContentSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeContentSource(val *VolumeContentSource) *NullableVolumeContentSource {
	return &NullableVolumeContentSource{value: val, isSet: true}
}

func (v NullableVolumeContentSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeContentSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


