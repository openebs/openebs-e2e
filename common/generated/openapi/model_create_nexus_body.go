/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateNexusBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNexusBody{}

// CreateNexusBody Create Nexus Body
type CreateNexusBody struct {
	// replica can be iscsi and nvmf remote targets or a local spdk bdev  (i.e. bdev:///name-of-the-bdev).   uris to the targets we connect to
	Children []string `json:"children"`
	// size of the device in bytes
	Size int64 `json:"size"`
}

type _CreateNexusBody CreateNexusBody

// NewCreateNexusBody instantiates a new CreateNexusBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNexusBody(children []string, size int64) *CreateNexusBody {
	this := CreateNexusBody{}
	this.Children = children
	this.Size = size
	return &this
}

// NewCreateNexusBodyWithDefaults instantiates a new CreateNexusBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNexusBodyWithDefaults() *CreateNexusBody {
	this := CreateNexusBody{}
	return &this
}

// GetChildren returns the Children field value
func (o *CreateNexusBody) GetChildren() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Children
}

// GetChildrenOk returns a tuple with the Children field value
// and a boolean to check if the value has been set.
func (o *CreateNexusBody) GetChildrenOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Children, true
}

// SetChildren sets field value
func (o *CreateNexusBody) SetChildren(v []string) {
	o.Children = v
}

// GetSize returns the Size field value
func (o *CreateNexusBody) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *CreateNexusBody) GetSizeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *CreateNexusBody) SetSize(v int64) {
	o.Size = v
}

func (o CreateNexusBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNexusBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["children"] = o.Children
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

func (o *CreateNexusBody) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"children",
		"size",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateNexusBody := _CreateNexusBody{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateNexusBody)

	if err != nil {
		return err
	}

	*o = CreateNexusBody(varCreateNexusBody)

	return err
}

type NullableCreateNexusBody struct {
	value *CreateNexusBody
	isSet bool
}

func (v NullableCreateNexusBody) Get() *CreateNexusBody {
	return v.value
}

func (v *NullableCreateNexusBody) Set(val *CreateNexusBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNexusBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNexusBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNexusBody(val *CreateNexusBody) *NullableCreateNexusBody {
	return &NullableCreateNexusBody{value: val, isSet: true}
}

func (v NullableCreateNexusBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNexusBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


