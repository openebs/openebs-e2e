/*
IoEngine RESTful API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NexusSpecOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NexusSpecOperation{}

// NexusSpecOperation Record of the operation in progress
type NexusSpecOperation struct {
	// Record of the operation
	Operation string `json:"operation"`
	// Result of the operation
	Result *bool `json:"result,omitempty"`
}

type _NexusSpecOperation NexusSpecOperation

// NewNexusSpecOperation instantiates a new NexusSpecOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNexusSpecOperation(operation string) *NexusSpecOperation {
	this := NexusSpecOperation{}
	this.Operation = operation
	return &this
}

// NewNexusSpecOperationWithDefaults instantiates a new NexusSpecOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNexusSpecOperationWithDefaults() *NexusSpecOperation {
	this := NexusSpecOperation{}
	return &this
}

// GetOperation returns the Operation field value
func (o *NexusSpecOperation) GetOperation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *NexusSpecOperation) GetOperationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Operation, true
}

// SetOperation sets field value
func (o *NexusSpecOperation) SetOperation(v string) {
	o.Operation = v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *NexusSpecOperation) GetResult() bool {
	if o == nil || IsNil(o.Result) {
		var ret bool
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NexusSpecOperation) GetResultOk() (*bool, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *NexusSpecOperation) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given bool and assigns it to the Result field.
func (o *NexusSpecOperation) SetResult(v bool) {
	o.Result = &v
}

func (o NexusSpecOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NexusSpecOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["operation"] = o.Operation
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

func (o *NexusSpecOperation) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"operation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNexusSpecOperation := _NexusSpecOperation{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNexusSpecOperation)

	if err != nil {
		return err
	}

	*o = NexusSpecOperation(varNexusSpecOperation)

	return err
}

type NullableNexusSpecOperation struct {
	value *NexusSpecOperation
	isSet bool
}

func (v NullableNexusSpecOperation) Get() *NexusSpecOperation {
	return v.value
}

func (v *NullableNexusSpecOperation) Set(val *NexusSpecOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableNexusSpecOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableNexusSpecOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNexusSpecOperation(val *NexusSpecOperation) *NullableNexusSpecOperation {
	return &NullableNexusSpecOperation{value: val, isSet: true}
}

func (v NullableNexusSpecOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNexusSpecOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


