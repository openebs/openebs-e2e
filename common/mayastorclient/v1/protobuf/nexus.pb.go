// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.8
// source: nexus.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// / Nexus NVMe preemption policy.
type NexusNvmePreemption int32

const (
	NexusNvmePreemption_ArgKey NexusNvmePreemption = 0 // preempts using the preemptKey argument, if any
	NexusNvmePreemption_Holder NexusNvmePreemption = 1 // preempts the current reservation holder, if any
)

// Enum value maps for NexusNvmePreemption.
var (
	NexusNvmePreemption_name = map[int32]string{
		0: "ArgKey",
		1: "Holder",
	}
	NexusNvmePreemption_value = map[string]int32{
		"ArgKey": 0,
		"Holder": 1,
	}
)

func (x NexusNvmePreemption) Enum() *NexusNvmePreemption {
	p := new(NexusNvmePreemption)
	*p = x
	return p
}

func (x NexusNvmePreemption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NexusNvmePreemption) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[0].Descriptor()
}

func (NexusNvmePreemption) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[0]
}

func (x NexusNvmePreemption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NexusNvmePreemption.Descriptor instead.
func (NexusNvmePreemption) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{0}
}

// / NVMe reservation types.
type NvmeReservation int32

const (
	NvmeReservation_Reserved                NvmeReservation = 0
	NvmeReservation_WriteExclusive          NvmeReservation = 1
	NvmeReservation_ExclusiveAccess         NvmeReservation = 2
	NvmeReservation_WriteExclusiveRegsOnly  NvmeReservation = 3
	NvmeReservation_ExclusiveAccessRegsOnly NvmeReservation = 4
	NvmeReservation_WriteExclusiveAllRegs   NvmeReservation = 5
	NvmeReservation_ExclusiveAccessAllRegs  NvmeReservation = 6
)

// Enum value maps for NvmeReservation.
var (
	NvmeReservation_name = map[int32]string{
		0: "Reserved",
		1: "WriteExclusive",
		2: "ExclusiveAccess",
		3: "WriteExclusiveRegsOnly",
		4: "ExclusiveAccessRegsOnly",
		5: "WriteExclusiveAllRegs",
		6: "ExclusiveAccessAllRegs",
	}
	NvmeReservation_value = map[string]int32{
		"Reserved":                0,
		"WriteExclusive":          1,
		"ExclusiveAccess":         2,
		"WriteExclusiveRegsOnly":  3,
		"ExclusiveAccessRegsOnly": 4,
		"WriteExclusiveAllRegs":   5,
		"ExclusiveAccessAllRegs":  6,
	}
)

func (x NvmeReservation) Enum() *NvmeReservation {
	p := new(NvmeReservation)
	*p = x
	return p
}

func (x NvmeReservation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NvmeReservation) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[1].Descriptor()
}

func (NvmeReservation) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[1]
}

func (x NvmeReservation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NvmeReservation.Descriptor instead.
func (NvmeReservation) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{1}
}

// State of the nexus child.
type ChildState int32

const (
	ChildState_CHILD_STATE_UNKNOWN  ChildState = 0 // no particular reason for the child to be in this state; this is typically the init state
	ChildState_CHILD_STATE_ONLINE   ChildState = 1 // healthy and contains the latest bits
	ChildState_CHILD_STATE_DEGRADED ChildState = 2 // rebuild is in progress (or other recoverable error)
	ChildState_CHILD_STATE_FAULTED  ChildState = 3 // unrecoverable error (control plane must act)
)

// Enum value maps for ChildState.
var (
	ChildState_name = map[int32]string{
		0: "CHILD_STATE_UNKNOWN",
		1: "CHILD_STATE_ONLINE",
		2: "CHILD_STATE_DEGRADED",
		3: "CHILD_STATE_FAULTED",
	}
	ChildState_value = map[string]int32{
		"CHILD_STATE_UNKNOWN":  0,
		"CHILD_STATE_ONLINE":   1,
		"CHILD_STATE_DEGRADED": 2,
		"CHILD_STATE_FAULTED":  3,
	}
)

func (x ChildState) Enum() *ChildState {
	p := new(ChildState)
	*p = x
	return p
}

func (x ChildState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChildState) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[2].Descriptor()
}

func (ChildState) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[2]
}

func (x ChildState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChildState.Descriptor instead.
func (ChildState) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{2}
}

// State of the nexus child.
type ChildStateReason int32

const (
	ChildStateReason_CHILD_STATE_REASON_NONE           ChildStateReason = 0  // reason for CHILD_REASON_NONE, CHILD_UNKNOWN
	ChildStateReason_CHILD_STATE_REASON_INIT           ChildStateReason = 1  // child is being initialized
	ChildStateReason_CHILD_STATE_REASON_CLOSED         ChildStateReason = 2  // child is being destroyed or has been closed
	ChildStateReason_CHILD_STATE_REASON_CANNOT_OPEN    ChildStateReason = 3  // failed to open child (e.g. cannot access device)
	ChildStateReason_CHILD_STATE_REASON_CONFIG_INVALID ChildStateReason = 4  // invalid child device configuration (e.g. mismatching size)
	ChildStateReason_CHILD_STATE_REASON_REBUILD_FAILED ChildStateReason = 5  // rebuild operation failed for this child
	ChildStateReason_CHILD_STATE_REASON_IO_FAILURE     ChildStateReason = 6  // child faulted because of other I/O errors
	ChildStateReason_CHILD_STATE_REASON_BY_CLIENT      ChildStateReason = 7  // child has been faulted by a client
	ChildStateReason_CHILD_STATE_REASON_OUT_OF_SYNC    ChildStateReason = 8  // child is being rebuilt
	ChildStateReason_CHILD_STATE_REASON_NO_SPACE       ChildStateReason = 9  // child faulted because I/O operation failed with ENOSPC
	ChildStateReason_CHILD_STATE_REASON_TIMED_OUT      ChildStateReason = 10 // child faulted because I/O operation failed with timeout
	ChildStateReason_CHILD_STATE_REASON_ADMIN_FAILED   ChildStateReason = 11 // child faulted of an admin command failure
)

// Enum value maps for ChildStateReason.
var (
	ChildStateReason_name = map[int32]string{
		0:  "CHILD_STATE_REASON_NONE",
		1:  "CHILD_STATE_REASON_INIT",
		2:  "CHILD_STATE_REASON_CLOSED",
		3:  "CHILD_STATE_REASON_CANNOT_OPEN",
		4:  "CHILD_STATE_REASON_CONFIG_INVALID",
		5:  "CHILD_STATE_REASON_REBUILD_FAILED",
		6:  "CHILD_STATE_REASON_IO_FAILURE",
		7:  "CHILD_STATE_REASON_BY_CLIENT",
		8:  "CHILD_STATE_REASON_OUT_OF_SYNC",
		9:  "CHILD_STATE_REASON_NO_SPACE",
		10: "CHILD_STATE_REASON_TIMED_OUT",
		11: "CHILD_STATE_REASON_ADMIN_FAILED",
	}
	ChildStateReason_value = map[string]int32{
		"CHILD_STATE_REASON_NONE":           0,
		"CHILD_STATE_REASON_INIT":           1,
		"CHILD_STATE_REASON_CLOSED":         2,
		"CHILD_STATE_REASON_CANNOT_OPEN":    3,
		"CHILD_STATE_REASON_CONFIG_INVALID": 4,
		"CHILD_STATE_REASON_REBUILD_FAILED": 5,
		"CHILD_STATE_REASON_IO_FAILURE":     6,
		"CHILD_STATE_REASON_BY_CLIENT":      7,
		"CHILD_STATE_REASON_OUT_OF_SYNC":    8,
		"CHILD_STATE_REASON_NO_SPACE":       9,
		"CHILD_STATE_REASON_TIMED_OUT":      10,
		"CHILD_STATE_REASON_ADMIN_FAILED":   11,
	}
)

func (x ChildStateReason) Enum() *ChildStateReason {
	p := new(ChildStateReason)
	*p = x
	return p
}

func (x ChildStateReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChildStateReason) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[3].Descriptor()
}

func (ChildStateReason) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[3]
}

func (x ChildStateReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChildStateReason.Descriptor instead.
func (ChildStateReason) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{3}
}

// State of the nexus (terminology inspired by ZFS).
type NexusState int32

const (
	NexusState_NEXUS_UNKNOWN       NexusState = 0
	NexusState_NEXUS_ONLINE        NexusState = 1 // healthy and working
	NexusState_NEXUS_DEGRADED      NexusState = 2 // not healthy but is able to serve IO (i.e. rebuild is in progress)
	NexusState_NEXUS_FAULTED       NexusState = 3 // broken and unable to serve IO
	NexusState_NEXUS_SHUTTING_DOWN NexusState = 4 // shutdown in progress: not able to serve I/O
	NexusState_NEXUS_SHUTDOWN      NexusState = 5 // shutdown complete: not able to serve I/O
)

// Enum value maps for NexusState.
var (
	NexusState_name = map[int32]string{
		0: "NEXUS_UNKNOWN",
		1: "NEXUS_ONLINE",
		2: "NEXUS_DEGRADED",
		3: "NEXUS_FAULTED",
		4: "NEXUS_SHUTTING_DOWN",
		5: "NEXUS_SHUTDOWN",
	}
	NexusState_value = map[string]int32{
		"NEXUS_UNKNOWN":       0,
		"NEXUS_ONLINE":        1,
		"NEXUS_DEGRADED":      2,
		"NEXUS_FAULTED":       3,
		"NEXUS_SHUTTING_DOWN": 4,
		"NEXUS_SHUTDOWN":      5,
	}
)

func (x NexusState) Enum() *NexusState {
	p := new(NexusState)
	*p = x
	return p
}

func (x NexusState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NexusState) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[4].Descriptor()
}

func (NexusState) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[4]
}

func (x NexusState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NexusState.Descriptor instead.
func (NexusState) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{4}
}

type NvmeAnaState int32

const (
	NvmeAnaState_NVME_ANA_INVALID_STATE         NvmeAnaState = 0 // invalid, do not use
	NvmeAnaState_NVME_ANA_OPTIMIZED_STATE       NvmeAnaState = 1
	NvmeAnaState_NVME_ANA_NON_OPTIMIZED_STATE   NvmeAnaState = 2
	NvmeAnaState_NVME_ANA_INACCESSIBLE_STATE    NvmeAnaState = 3
	NvmeAnaState_NVME_ANA_PERSISTENT_LOSS_STATE NvmeAnaState = 4  // not yet supported
	NvmeAnaState_NVME_ANA_CHANGE_STATE          NvmeAnaState = 15 // not yet supported
)

// Enum value maps for NvmeAnaState.
var (
	NvmeAnaState_name = map[int32]string{
		0:  "NVME_ANA_INVALID_STATE",
		1:  "NVME_ANA_OPTIMIZED_STATE",
		2:  "NVME_ANA_NON_OPTIMIZED_STATE",
		3:  "NVME_ANA_INACCESSIBLE_STATE",
		4:  "NVME_ANA_PERSISTENT_LOSS_STATE",
		15: "NVME_ANA_CHANGE_STATE",
	}
	NvmeAnaState_value = map[string]int32{
		"NVME_ANA_INVALID_STATE":         0,
		"NVME_ANA_OPTIMIZED_STATE":       1,
		"NVME_ANA_NON_OPTIMIZED_STATE":   2,
		"NVME_ANA_INACCESSIBLE_STATE":    3,
		"NVME_ANA_PERSISTENT_LOSS_STATE": 4,
		"NVME_ANA_CHANGE_STATE":          15,
	}
)

func (x NvmeAnaState) Enum() *NvmeAnaState {
	p := new(NvmeAnaState)
	*p = x
	return p
}

func (x NvmeAnaState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NvmeAnaState) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[5].Descriptor()
}

func (NvmeAnaState) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[5]
}

func (x NvmeAnaState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NvmeAnaState.Descriptor instead.
func (NvmeAnaState) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{5}
}

type ChildAction int32

const (
	ChildAction_Offline          ChildAction = 0 // take a child offline, e.g. for maintenance
	ChildAction_Online           ChildAction = 1 // bring a child online which was previously offlined or faulted
	ChildAction_FaultIOError     ChildAction = 2 // fault a child with an I/O error (e.g. for testing/debug purposes)
	ChildAction_OfflinePermanent ChildAction = 3 // take a child offline permanently; exactly the same a legacy FaultNexusChild method
)

// Enum value maps for ChildAction.
var (
	ChildAction_name = map[int32]string{
		0: "Offline",
		1: "Online",
		2: "FaultIOError",
		3: "OfflinePermanent",
	}
	ChildAction_value = map[string]int32{
		"Offline":          0,
		"Online":           1,
		"FaultIOError":     2,
		"OfflinePermanent": 3,
	}
)

func (x ChildAction) Enum() *ChildAction {
	p := new(ChildAction)
	*p = x
	return p
}

func (x ChildAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChildAction) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[6].Descriptor()
}

func (ChildAction) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[6]
}

func (x ChildAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChildAction.Descriptor instead.
func (ChildAction) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{6}
}

type RebuildJobState int32

const (
	RebuildJobState_Init       RebuildJobState = 0 // Initialized, not yet rebuilding
	RebuildJobState_Rebuilding RebuildJobState = 1 // Running rebuild
	RebuildJobState_Stopped    RebuildJobState = 2 // Stopped rebuild
	RebuildJobState_Paused     RebuildJobState = 3 // Paused rebuild
	RebuildJobState_Failed     RebuildJobState = 4 // Failed for some reason
	RebuildJobState_Completed  RebuildJobState = 5 // Rebuild completed succesfully
)

// Enum value maps for RebuildJobState.
var (
	RebuildJobState_name = map[int32]string{
		0: "Init",
		1: "Rebuilding",
		2: "Stopped",
		3: "Paused",
		4: "Failed",
		5: "Completed",
	}
	RebuildJobState_value = map[string]int32{
		"Init":       0,
		"Rebuilding": 1,
		"Stopped":    2,
		"Paused":     3,
		"Failed":     4,
		"Completed":  5,
	}
)

func (x RebuildJobState) Enum() *RebuildJobState {
	p := new(RebuildJobState)
	*p = x
	return p
}

func (x RebuildJobState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RebuildJobState) Descriptor() protoreflect.EnumDescriptor {
	return file_nexus_proto_enumTypes[7].Descriptor()
}

func (RebuildJobState) Type() protoreflect.EnumType {
	return &file_nexus_proto_enumTypes[7]
}

func (x RebuildJobState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RebuildJobState.Descriptor instead.
func (RebuildJobState) EnumDescriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{7}
}

// Create nexus arguments.
type CreateNexusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                          // name of the nexus
	Uuid          string              `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`                                                          // UUID of the nexus
	Size          uint64              `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                                                         // size of the device in bytes
	MinCntlId     uint32              `protobuf:"varint,4,opt,name=minCntlId,proto3" json:"minCntlId,omitempty"`                                               // minimum NVMe controller ID
	MaxCntlId     uint32              `protobuf:"varint,5,opt,name=maxCntlId,proto3" json:"maxCntlId,omitempty"`                                               // maximum NVMe controller ID
	ResvKey       uint64              `protobuf:"varint,6,opt,name=resvKey,proto3" json:"resvKey,omitempty"`                                                   // NVMe reservation key for children
	PreemptKey    uint64              `protobuf:"varint,7,opt,name=preemptKey,proto3" json:"preemptKey,omitempty"`                                             // NVMe preempt key for children
	Children      []string            `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`                                                  // uris to the targets we connect to
	NexusInfoKey  string              `protobuf:"bytes,9,opt,name=nexusInfoKey,proto3" json:"nexusInfoKey,omitempty"`                                          // the key to use to persist the nexus info structure
	ResvType      *NvmeReservation    `protobuf:"varint,10,opt,name=resvType,proto3,enum=mayastor.v1.NvmeReservation,oneof" json:"resvType,omitempty"`         // the reservation type to use
	PreemptPolicy NexusNvmePreemption `protobuf:"varint,11,opt,name=preemptPolicy,proto3,enum=mayastor.v1.NexusNvmePreemption" json:"preemptPolicy,omitempty"` // the preemption policy to use
}

func (x *CreateNexusRequest) Reset() {
	*x = CreateNexusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNexusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNexusRequest) ProtoMessage() {}

func (x *CreateNexusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNexusRequest.ProtoReflect.Descriptor instead.
func (*CreateNexusRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNexusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNexusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CreateNexusRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateNexusRequest) GetMinCntlId() uint32 {
	if x != nil {
		return x.MinCntlId
	}
	return 0
}

func (x *CreateNexusRequest) GetMaxCntlId() uint32 {
	if x != nil {
		return x.MaxCntlId
	}
	return 0
}

func (x *CreateNexusRequest) GetResvKey() uint64 {
	if x != nil {
		return x.ResvKey
	}
	return 0
}

func (x *CreateNexusRequest) GetPreemptKey() uint64 {
	if x != nil {
		return x.PreemptKey
	}
	return 0
}

func (x *CreateNexusRequest) GetChildren() []string {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *CreateNexusRequest) GetNexusInfoKey() string {
	if x != nil {
		return x.NexusInfoKey
	}
	return ""
}

func (x *CreateNexusRequest) GetResvType() NvmeReservation {
	if x != nil && x.ResvType != nil {
		return *x.ResvType
	}
	return NvmeReservation_Reserved
}

func (x *CreateNexusRequest) GetPreemptPolicy() NexusNvmePreemption {
	if x != nil {
		return x.PreemptPolicy
	}
	return NexusNvmePreemption_ArgKey
}

// represents a child device part of a nexus
type Child struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri             string                 `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`                                                                       // uri of the child device
	State           ChildState             `protobuf:"varint,2,opt,name=state,proto3,enum=mayastor.v1.ChildState" json:"state,omitempty"`                                      // state of the child
	StateReason     ChildStateReason       `protobuf:"varint,3,opt,name=state_reason,json=stateReason,proto3,enum=mayastor.v1.ChildStateReason" json:"state_reason,omitempty"` // child state reason
	RebuildProgress int32                  `protobuf:"varint,4,opt,name=rebuild_progress,json=rebuildProgress,proto3" json:"rebuild_progress,omitempty"`                       // rebuild progress
	DeviceName      *string                `protobuf:"bytes,5,opt,name=device_name,json=deviceName,proto3,oneof" json:"device_name,omitempty"`                                 // child device name
	FaultTimestamp  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=fault_timestamp,json=faultTimestamp,proto3" json:"fault_timestamp,omitempty"`                           // timestamp(UTC) when child went faulted
	HasIoLog        bool                   `protobuf:"varint,7,opt,name=has_io_log,json=hasIoLog,proto3" json:"has_io_log,omitempty"`                                          // true if the child has an active I/O log
}

func (x *Child) Reset() {
	*x = Child{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Child) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Child) ProtoMessage() {}

func (x *Child) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Child.ProtoReflect.Descriptor instead.
func (*Child) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{1}
}

func (x *Child) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Child) GetState() ChildState {
	if x != nil {
		return x.State
	}
	return ChildState_CHILD_STATE_UNKNOWN
}

func (x *Child) GetStateReason() ChildStateReason {
	if x != nil {
		return x.StateReason
	}
	return ChildStateReason_CHILD_STATE_REASON_NONE
}

func (x *Child) GetRebuildProgress() int32 {
	if x != nil {
		return x.RebuildProgress
	}
	return 0
}

func (x *Child) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *Child) GetFaultTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FaultTimestamp
	}
	return nil
}

func (x *Child) GetHasIoLog() bool {
	if x != nil {
		return x.HasIoLog
	}
	return false
}

// represents a nexus device
type Nexus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                // name of the nexus
	Uuid     string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`                                // UUID of the bdev
	Size     uint64     `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                               // size of the volume in bytes
	State    NexusState `protobuf:"varint,4,opt,name=state,proto3,enum=mayastor.v1.NexusState" json:"state,omitempty"` // current state of the nexus
	Children []*Child   `protobuf:"bytes,5,rep,name=children,proto3" json:"children,omitempty"`                        // array of children
	// URI of the device for the volume (missing if not published).
	// Missing property and empty string are treated the same.
	DeviceUri    string       `protobuf:"bytes,6,opt,name=device_uri,json=deviceUri,proto3" json:"device_uri,omitempty"`
	Rebuilds     uint32       `protobuf:"varint,7,opt,name=rebuilds,proto3" json:"rebuilds,omitempty"`                                               // total number of rebuild tasks
	AnaState     NvmeAnaState `protobuf:"varint,8,opt,name=ana_state,json=anaState,proto3,enum=mayastor.v1.NvmeAnaState" json:"ana_state,omitempty"` // Nexus ANA state.
	AllowedHosts []string     `protobuf:"bytes,9,rep,name=allowed_hosts,json=allowedHosts,proto3" json:"allowed_hosts,omitempty"`                    // host (nqn's) which are allowed to connect to the target
}

func (x *Nexus) Reset() {
	*x = Nexus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nexus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nexus) ProtoMessage() {}

func (x *Nexus) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nexus.ProtoReflect.Descriptor instead.
func (*Nexus) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{2}
}

func (x *Nexus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Nexus) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Nexus) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Nexus) GetState() NexusState {
	if x != nil {
		return x.State
	}
	return NexusState_NEXUS_UNKNOWN
}

func (x *Nexus) GetChildren() []*Child {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *Nexus) GetDeviceUri() string {
	if x != nil {
		return x.DeviceUri
	}
	return ""
}

func (x *Nexus) GetRebuilds() uint32 {
	if x != nil {
		return x.Rebuilds
	}
	return 0
}

func (x *Nexus) GetAnaState() NvmeAnaState {
	if x != nil {
		return x.AnaState
	}
	return NvmeAnaState_NVME_ANA_INVALID_STATE
}

func (x *Nexus) GetAllowedHosts() []string {
	if x != nil {
		return x.AllowedHosts
	}
	return nil
}

type CreateNexusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *CreateNexusResponse) Reset() {
	*x = CreateNexusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNexusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNexusResponse) ProtoMessage() {}

func (x *CreateNexusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNexusResponse.ProtoReflect.Descriptor instead.
func (*CreateNexusResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{3}
}

func (x *CreateNexusResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type AddChildNexusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *AddChildNexusResponse) Reset() {
	*x = AddChildNexusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChildNexusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChildNexusResponse) ProtoMessage() {}

func (x *AddChildNexusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChildNexusResponse.ProtoReflect.Descriptor instead.
func (*AddChildNexusResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{4}
}

func (x *AddChildNexusResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type RemoveChildNexusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *RemoveChildNexusResponse) Reset() {
	*x = RemoveChildNexusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChildNexusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChildNexusResponse) ProtoMessage() {}

func (x *RemoveChildNexusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChildNexusResponse.ProtoReflect.Descriptor instead.
func (*RemoveChildNexusResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{5}
}

func (x *RemoveChildNexusResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type UnpublishNexusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *UnpublishNexusResponse) Reset() {
	*x = UnpublishNexusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishNexusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishNexusResponse) ProtoMessage() {}

func (x *UnpublishNexusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishNexusResponse.ProtoReflect.Descriptor instead.
func (*UnpublishNexusResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{6}
}

func (x *UnpublishNexusResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type SetNvmeAnaStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *SetNvmeAnaStateResponse) Reset() {
	*x = SetNvmeAnaStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNvmeAnaStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNvmeAnaStateResponse) ProtoMessage() {}

func (x *SetNvmeAnaStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNvmeAnaStateResponse.ProtoReflect.Descriptor instead.
func (*SetNvmeAnaStateResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{7}
}

func (x *SetNvmeAnaStateResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type ListNexusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusList []*Nexus `protobuf:"bytes,1,rep,name=nexus_list,json=nexusList,proto3" json:"nexus_list,omitempty"`
}

func (x *ListNexusResponse) Reset() {
	*x = ListNexusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNexusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNexusResponse) ProtoMessage() {}

func (x *ListNexusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNexusResponse.ProtoReflect.Descriptor instead.
func (*ListNexusResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{8}
}

func (x *ListNexusResponse) GetNexusList() []*Nexus {
	if x != nil {
		return x.NexusList
	}
	return nil
}

type DestroyNexusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus
}

func (x *DestroyNexusRequest) Reset() {
	*x = DestroyNexusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestroyNexusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyNexusRequest) ProtoMessage() {}

func (x *DestroyNexusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyNexusRequest.ProtoReflect.Descriptor instead.
func (*DestroyNexusRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{9}
}

func (x *DestroyNexusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ShutdownNexusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus
}

func (x *ShutdownNexusRequest) Reset() {
	*x = ShutdownNexusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownNexusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownNexusRequest) ProtoMessage() {}

func (x *ShutdownNexusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownNexusRequest.ProtoReflect.Descriptor instead.
func (*ShutdownNexusRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{10}
}

func (x *ShutdownNexusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ShutdownNexusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *ShutdownNexusResponse) Reset() {
	*x = ShutdownNexusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShutdownNexusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShutdownNexusResponse) ProtoMessage() {}

func (x *ShutdownNexusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShutdownNexusResponse.ProtoReflect.Descriptor instead.
func (*ShutdownNexusResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{11}
}

func (x *ShutdownNexusResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type AddChildNexusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`            // uuid of the nexus
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`              // URI of the child device to be added
	Norebuild bool   `protobuf:"varint,3,opt,name=norebuild,proto3" json:"norebuild,omitempty"` // auto start rebuilding
}

func (x *AddChildNexusRequest) Reset() {
	*x = AddChildNexusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddChildNexusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddChildNexusRequest) ProtoMessage() {}

func (x *AddChildNexusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddChildNexusRequest.ProtoReflect.Descriptor instead.
func (*AddChildNexusRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{12}
}

func (x *AddChildNexusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AddChildNexusRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *AddChildNexusRequest) GetNorebuild() bool {
	if x != nil {
		return x.Norebuild
	}
	return false
}

type RemoveChildNexusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus
	Uri  string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`   // URI of the child device to be removed
}

func (x *RemoveChildNexusRequest) Reset() {
	*x = RemoveChildNexusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveChildNexusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveChildNexusRequest) ProtoMessage() {}

func (x *RemoveChildNexusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveChildNexusRequest.ProtoReflect.Descriptor instead.
func (*RemoveChildNexusRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveChildNexusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RemoveChildNexusRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type FaultNexusChildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus
	Uri  string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`   // URI of the child device to be faulted
}

func (x *FaultNexusChildRequest) Reset() {
	*x = FaultNexusChildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultNexusChildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultNexusChildRequest) ProtoMessage() {}

func (x *FaultNexusChildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultNexusChildRequest.ProtoReflect.Descriptor instead.
func (*FaultNexusChildRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{14}
}

func (x *FaultNexusChildRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *FaultNexusChildRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type FaultNexusChildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *FaultNexusChildResponse) Reset() {
	*x = FaultNexusChildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FaultNexusChildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FaultNexusChildResponse) ProtoMessage() {}

func (x *FaultNexusChildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FaultNexusChildResponse.ProtoReflect.Descriptor instead.
func (*FaultNexusChildResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{15}
}

func (x *FaultNexusChildResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

// this message will be subject to change as we will add support for remote
// storage protocols.
type PublishNexusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid         string        `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                                     // uuid of the nexus which to create device for
	Key          string        `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                                       // encryption key
	Share        ShareProtocol `protobuf:"varint,3,opt,name=share,proto3,enum=mayastor.v1.ShareProtocol" json:"share,omitempty"`   // protocol used for the front end.
	AllowedHosts []string      `protobuf:"bytes,4,rep,name=allowed_hosts,json=allowedHosts,proto3" json:"allowed_hosts,omitempty"` // host (nqn's) which are allowed to connect to the target.
}

func (x *PublishNexusRequest) Reset() {
	*x = PublishNexusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishNexusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishNexusRequest) ProtoMessage() {}

func (x *PublishNexusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishNexusRequest.ProtoReflect.Descriptor instead.
func (*PublishNexusRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{16}
}

func (x *PublishNexusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *PublishNexusRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PublishNexusRequest) GetShare() ShareProtocol {
	if x != nil {
		return x.Share
	}
	return ShareProtocol_NONE
}

func (x *PublishNexusRequest) GetAllowedHosts() []string {
	if x != nil {
		return x.AllowedHosts
	}
	return nil
}

type PublishNexusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *PublishNexusResponse) Reset() {
	*x = PublishNexusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishNexusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishNexusResponse) ProtoMessage() {}

func (x *PublishNexusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishNexusResponse.ProtoReflect.Descriptor instead.
func (*PublishNexusResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{17}
}

func (x *PublishNexusResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type UnpublishNexusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus which to destroy
}

func (x *UnpublishNexusRequest) Reset() {
	*x = UnpublishNexusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnpublishNexusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnpublishNexusRequest) ProtoMessage() {}

func (x *UnpublishNexusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnpublishNexusRequest.ProtoReflect.Descriptor instead.
func (*UnpublishNexusRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{18}
}

func (x *UnpublishNexusRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ListNexusOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list the nexuses matching the name if provided
	Name *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// list the nexus matching the uuid if provided
	Uuid *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *ListNexusOptions) Reset() {
	*x = ListNexusOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNexusOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNexusOptions) ProtoMessage() {}

func (x *ListNexusOptions) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNexusOptions.ProtoReflect.Descriptor instead.
func (*ListNexusOptions) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{19}
}

func (x *ListNexusOptions) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ListNexusOptions) GetUuid() *wrapperspb.StringValue {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type GetNvmeAnaStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus
}

func (x *GetNvmeAnaStateRequest) Reset() {
	*x = GetNvmeAnaStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNvmeAnaStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNvmeAnaStateRequest) ProtoMessage() {}

func (x *GetNvmeAnaStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNvmeAnaStateRequest.ProtoReflect.Descriptor instead.
func (*GetNvmeAnaStateRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{20}
}

func (x *GetNvmeAnaStateRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetNvmeAnaStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnaState NvmeAnaState `protobuf:"varint,1,opt,name=ana_state,json=anaState,proto3,enum=mayastor.v1.NvmeAnaState" json:"ana_state,omitempty"`
}

func (x *GetNvmeAnaStateResponse) Reset() {
	*x = GetNvmeAnaStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNvmeAnaStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNvmeAnaStateResponse) ProtoMessage() {}

func (x *GetNvmeAnaStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNvmeAnaStateResponse.ProtoReflect.Descriptor instead.
func (*GetNvmeAnaStateResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{21}
}

func (x *GetNvmeAnaStateResponse) GetAnaState() NvmeAnaState {
	if x != nil {
		return x.AnaState
	}
	return NvmeAnaState_NVME_ANA_INVALID_STATE
}

type SetNvmeAnaStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid     string       `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus
	AnaState NvmeAnaState `protobuf:"varint,2,opt,name=ana_state,json=anaState,proto3,enum=mayastor.v1.NvmeAnaState" json:"ana_state,omitempty"`
}

func (x *SetNvmeAnaStateRequest) Reset() {
	*x = SetNvmeAnaStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNvmeAnaStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNvmeAnaStateRequest) ProtoMessage() {}

func (x *SetNvmeAnaStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNvmeAnaStateRequest.ProtoReflect.Descriptor instead.
func (*SetNvmeAnaStateRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{22}
}

func (x *SetNvmeAnaStateRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *SetNvmeAnaStateRequest) GetAnaState() NvmeAnaState {
	if x != nil {
		return x.AnaState
	}
	return NvmeAnaState_NVME_ANA_INVALID_STATE
}

type ChildOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusUuid string      `protobuf:"bytes,1,opt,name=nexus_uuid,json=nexusUuid,proto3" json:"nexus_uuid,omitempty"` // uuid of the nexus
	Uri       string      `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                              // uri of the child to act upon
	Action    ChildAction `protobuf:"varint,3,opt,name=action,proto3,enum=mayastor.v1.ChildAction" json:"action,omitempty"`
}

func (x *ChildOperationRequest) Reset() {
	*x = ChildOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildOperationRequest) ProtoMessage() {}

func (x *ChildOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildOperationRequest.ProtoReflect.Descriptor instead.
func (*ChildOperationRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{23}
}

func (x *ChildOperationRequest) GetNexusUuid() string {
	if x != nil {
		return x.NexusUuid
	}
	return ""
}

func (x *ChildOperationRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *ChildOperationRequest) GetAction() ChildAction {
	if x != nil {
		return x.Action
	}
	return ChildAction_Offline
}

type ChildOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *ChildOperationResponse) Reset() {
	*x = ChildOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildOperationResponse) ProtoMessage() {}

func (x *ChildOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildOperationResponse.ProtoReflect.Descriptor instead.
func (*ChildOperationResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{24}
}

func (x *ChildOperationResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type RebuildStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusUuid string `protobuf:"bytes,1,opt,name=nexus_uuid,json=nexusUuid,proto3" json:"nexus_uuid,omitempty"` // uuid of the nexus
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                              // uri of the destination child
}

func (x *RebuildStateRequest) Reset() {
	*x = RebuildStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildStateRequest) ProtoMessage() {}

func (x *RebuildStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildStateRequest.ProtoReflect.Descriptor instead.
func (*RebuildStateRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{25}
}

func (x *RebuildStateRequest) GetNexusUuid() string {
	if x != nil {
		return x.NexusUuid
	}
	return ""
}

func (x *RebuildStateRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type RebuildStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"` // current rebuild state (i.e. ready/running/completed etc.)
}

func (x *RebuildStateResponse) Reset() {
	*x = RebuildStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildStateResponse) ProtoMessage() {}

func (x *RebuildStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildStateResponse.ProtoReflect.Descriptor instead.
func (*RebuildStateResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{26}
}

func (x *RebuildStateResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type RebuildStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusUuid string `protobuf:"bytes,1,opt,name=nexus_uuid,json=nexusUuid,proto3" json:"nexus_uuid,omitempty"` // uuid of the nexus
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                              // uri of the destination child
}

func (x *RebuildStatsRequest) Reset() {
	*x = RebuildStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildStatsRequest) ProtoMessage() {}

func (x *RebuildStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildStatsRequest.ProtoReflect.Descriptor instead.
func (*RebuildStatsRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{27}
}

func (x *RebuildStatsRequest) GetNexusUuid() string {
	if x != nil {
		return x.NexusUuid
	}
	return ""
}

func (x *RebuildStatsRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type RebuildStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlocksTotal       uint64                 `protobuf:"varint,1,opt,name=blocks_total,json=blocksTotal,proto3" json:"blocks_total,omitempty"`                   // total number of blocks to recover
	BlocksRecovered   uint64                 `protobuf:"varint,2,opt,name=blocks_recovered,json=blocksRecovered,proto3" json:"blocks_recovered,omitempty"`       // number of blocks already recovered
	BlocksTransferred uint64                 `protobuf:"varint,8,opt,name=blocks_transferred,json=blocksTransferred,proto3" json:"blocks_transferred,omitempty"` // number of blocks for which the actual data transfer already occurred
	BlocksRemaining   uint64                 `protobuf:"varint,9,opt,name=blocks_remaining,json=blocksRemaining,proto3" json:"blocks_remaining,omitempty"`       // number of blocks remaining to transfer
	Progress          uint64                 `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`                                            // rebuild progress %
	BlocksPerTask     uint64                 `protobuf:"varint,4,opt,name=blocks_per_task,json=blocksPerTask,proto3" json:"blocks_per_task,omitempty"`           // granularity of each recovery task in blocks
	BlockSize         uint64                 `protobuf:"varint,5,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`                         // size in bytes of logical block
	TasksTotal        uint64                 `protobuf:"varint,6,opt,name=tasks_total,json=tasksTotal,proto3" json:"tasks_total,omitempty"`                      // total number of concurrent rebuild tasks
	TasksActive       uint64                 `protobuf:"varint,7,opt,name=tasks_active,json=tasksActive,proto3" json:"tasks_active,omitempty"`                   // number of current active tasks
	IsPartial         bool                   `protobuf:"varint,10,opt,name=is_partial,json=isPartial,proto3" json:"is_partial,omitempty"`                        // true for partial (only modified blocked transferred); false for the full rebuild (all blocks transferred)
	StartTime         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                         // start time of the rebuild (UTC)
}

func (x *RebuildStatsResponse) Reset() {
	*x = RebuildStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildStatsResponse) ProtoMessage() {}

func (x *RebuildStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildStatsResponse.ProtoReflect.Descriptor instead.
func (*RebuildStatsResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{28}
}

func (x *RebuildStatsResponse) GetBlocksTotal() uint64 {
	if x != nil {
		return x.BlocksTotal
	}
	return 0
}

func (x *RebuildStatsResponse) GetBlocksRecovered() uint64 {
	if x != nil {
		return x.BlocksRecovered
	}
	return 0
}

func (x *RebuildStatsResponse) GetBlocksTransferred() uint64 {
	if x != nil {
		return x.BlocksTransferred
	}
	return 0
}

func (x *RebuildStatsResponse) GetBlocksRemaining() uint64 {
	if x != nil {
		return x.BlocksRemaining
	}
	return 0
}

func (x *RebuildStatsResponse) GetProgress() uint64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *RebuildStatsResponse) GetBlocksPerTask() uint64 {
	if x != nil {
		return x.BlocksPerTask
	}
	return 0
}

func (x *RebuildStatsResponse) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *RebuildStatsResponse) GetTasksTotal() uint64 {
	if x != nil {
		return x.TasksTotal
	}
	return 0
}

func (x *RebuildStatsResponse) GetTasksActive() uint64 {
	if x != nil {
		return x.TasksActive
	}
	return 0
}

func (x *RebuildStatsResponse) GetIsPartial() bool {
	if x != nil {
		return x.IsPartial
	}
	return false
}

func (x *RebuildStatsResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

type ListRebuildHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count        *uint32                `protobuf:"varint,1,opt,name=count,proto3,oneof" json:"count,omitempty"`                                    // Maximum of rebuild records to be returned per nexus.
	SinceEndTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=since_end_time,json=sinceEndTime,proto3,oneof" json:"since_end_time,omitempty"` // List records with an end_time starting from this timestamp.
}

func (x *ListRebuildHistoryRequest) Reset() {
	*x = ListRebuildHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRebuildHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRebuildHistoryRequest) ProtoMessage() {}

func (x *ListRebuildHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRebuildHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListRebuildHistoryRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{29}
}

func (x *ListRebuildHistoryRequest) GetCount() uint32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *ListRebuildHistoryRequest) GetSinceEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SinceEndTime
	}
	return nil
}

type RebuildHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // uuid of the nexus
}

func (x *RebuildHistoryRequest) Reset() {
	*x = RebuildHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildHistoryRequest) ProtoMessage() {}

func (x *RebuildHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildHistoryRequest.ProtoReflect.Descriptor instead.
func (*RebuildHistoryRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{30}
}

func (x *RebuildHistoryRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ListRebuildHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histories map[string]*RebuildHistoryResponse `protobuf:"bytes,1,rep,name=histories,proto3" json:"histories,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Map of Nexus Id and its rebuild history.
	EndTime   *timestamppb.Timestamp             `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                                              // Newest end_time record. Next List call can use this as since_end_time.
}

func (x *ListRebuildHistoryResponse) Reset() {
	*x = ListRebuildHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRebuildHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRebuildHistoryResponse) ProtoMessage() {}

func (x *ListRebuildHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRebuildHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListRebuildHistoryResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{31}
}

func (x *ListRebuildHistoryResponse) GetHistories() map[string]*RebuildHistoryResponse {
	if x != nil {
		return x.Histories
	}
	return nil
}

func (x *ListRebuildHistoryResponse) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type RebuildHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid    string                  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`       // uuid of the nexus
	Name    string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`       // name of the nexus
	Records []*RebuildHistoryRecord `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"` // List of all the rebuild records
}

func (x *RebuildHistoryResponse) Reset() {
	*x = RebuildHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildHistoryResponse) ProtoMessage() {}

func (x *RebuildHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildHistoryResponse.ProtoReflect.Descriptor instead.
func (*RebuildHistoryResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{32}
}

func (x *RebuildHistoryResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RebuildHistoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RebuildHistoryResponse) GetRecords() []*RebuildHistoryRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

type RebuildHistoryRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildUri          string                 `protobuf:"bytes,1,opt,name=child_uri,json=childUri,proto3" json:"child_uri,omitempty"`                             // URI of the rebuilt child (destination)
	SrcUri            string                 `protobuf:"bytes,2,opt,name=src_uri,json=srcUri,proto3" json:"src_uri,omitempty"`                                   // URI of the source replica
	State             RebuildJobState        `protobuf:"varint,3,opt,name=state,proto3,enum=mayastor.v1.RebuildJobState" json:"state,omitempty"`                 // final state of the rebuild job
	BlocksTotal       uint64                 `protobuf:"varint,4,opt,name=blocks_total,json=blocksTotal,proto3" json:"blocks_total,omitempty"`                   // total number of blocks of the replicas
	BlocksRecovered   uint64                 `protobuf:"varint,5,opt,name=blocks_recovered,json=blocksRecovered,proto3" json:"blocks_recovered,omitempty"`       // number of blocks recovered
	BlocksTransferred uint64                 `protobuf:"varint,6,opt,name=blocks_transferred,json=blocksTransferred,proto3" json:"blocks_transferred,omitempty"` // number of blocks for which the actual data transfer occurred
	BlocksRemaining   uint64                 `protobuf:"varint,7,opt,name=blocks_remaining,json=blocksRemaining,proto3" json:"blocks_remaining,omitempty"`       // number of blocks remaining to transfer
	BlocksPerTask     uint64                 `protobuf:"varint,8,opt,name=blocks_per_task,json=blocksPerTask,proto3" json:"blocks_per_task,omitempty"`           // granularity of each recovery task in blocks
	BlockSize         uint64                 `protobuf:"varint,9,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`                         // size in bytes of logical block
	IsPartial         bool                   `protobuf:"varint,10,opt,name=is_partial,json=isPartial,proto3" json:"is_partial,omitempty"`                        // true for partial (only modified blocked transferred); false for the full rebuild (all blocks transferred)
	StartTime         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                         // start time of the rebuild (UTC)
	EndTime           *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                               // end time of the rebuild (UTC)
}

func (x *RebuildHistoryRecord) Reset() {
	*x = RebuildHistoryRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebuildHistoryRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildHistoryRecord) ProtoMessage() {}

func (x *RebuildHistoryRecord) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildHistoryRecord.ProtoReflect.Descriptor instead.
func (*RebuildHistoryRecord) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{33}
}

func (x *RebuildHistoryRecord) GetChildUri() string {
	if x != nil {
		return x.ChildUri
	}
	return ""
}

func (x *RebuildHistoryRecord) GetSrcUri() string {
	if x != nil {
		return x.SrcUri
	}
	return ""
}

func (x *RebuildHistoryRecord) GetState() RebuildJobState {
	if x != nil {
		return x.State
	}
	return RebuildJobState_Init
}

func (x *RebuildHistoryRecord) GetBlocksTotal() uint64 {
	if x != nil {
		return x.BlocksTotal
	}
	return 0
}

func (x *RebuildHistoryRecord) GetBlocksRecovered() uint64 {
	if x != nil {
		return x.BlocksRecovered
	}
	return 0
}

func (x *RebuildHistoryRecord) GetBlocksTransferred() uint64 {
	if x != nil {
		return x.BlocksTransferred
	}
	return 0
}

func (x *RebuildHistoryRecord) GetBlocksRemaining() uint64 {
	if x != nil {
		return x.BlocksRemaining
	}
	return 0
}

func (x *RebuildHistoryRecord) GetBlocksPerTask() uint64 {
	if x != nil {
		return x.BlocksPerTask
	}
	return 0
}

func (x *RebuildHistoryRecord) GetBlockSize() uint64 {
	if x != nil {
		return x.BlockSize
	}
	return 0
}

func (x *RebuildHistoryRecord) GetIsPartial() bool {
	if x != nil {
		return x.IsPartial
	}
	return false
}

func (x *RebuildHistoryRecord) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RebuildHistoryRecord) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type StartRebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusUuid string `protobuf:"bytes,1,opt,name=nexus_uuid,json=nexusUuid,proto3" json:"nexus_uuid,omitempty"` // uuid of the nexus
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                              // uri of the child to be rebuilt
}

func (x *StartRebuildRequest) Reset() {
	*x = StartRebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRebuildRequest) ProtoMessage() {}

func (x *StartRebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRebuildRequest.ProtoReflect.Descriptor instead.
func (*StartRebuildRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{34}
}

func (x *StartRebuildRequest) GetNexusUuid() string {
	if x != nil {
		return x.NexusUuid
	}
	return ""
}

func (x *StartRebuildRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type StartRebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *StartRebuildResponse) Reset() {
	*x = StartRebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRebuildResponse) ProtoMessage() {}

func (x *StartRebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRebuildResponse.ProtoReflect.Descriptor instead.
func (*StartRebuildResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{35}
}

func (x *StartRebuildResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type StopRebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusUuid string `protobuf:"bytes,1,opt,name=nexus_uuid,json=nexusUuid,proto3" json:"nexus_uuid,omitempty"` // uuid of the nexus
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                              // uri of the destination child
}

func (x *StopRebuildRequest) Reset() {
	*x = StopRebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRebuildRequest) ProtoMessage() {}

func (x *StopRebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRebuildRequest.ProtoReflect.Descriptor instead.
func (*StopRebuildRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{36}
}

func (x *StopRebuildRequest) GetNexusUuid() string {
	if x != nil {
		return x.NexusUuid
	}
	return ""
}

func (x *StopRebuildRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type StopRebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *StopRebuildResponse) Reset() {
	*x = StopRebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRebuildResponse) ProtoMessage() {}

func (x *StopRebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRebuildResponse.ProtoReflect.Descriptor instead.
func (*StopRebuildResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{37}
}

func (x *StopRebuildResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type PauseRebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusUuid string `protobuf:"bytes,1,opt,name=nexus_uuid,json=nexusUuid,proto3" json:"nexus_uuid,omitempty"` // uuid of the nexus
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                              // uri of the destination child
}

func (x *PauseRebuildRequest) Reset() {
	*x = PauseRebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseRebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseRebuildRequest) ProtoMessage() {}

func (x *PauseRebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseRebuildRequest.ProtoReflect.Descriptor instead.
func (*PauseRebuildRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{38}
}

func (x *PauseRebuildRequest) GetNexusUuid() string {
	if x != nil {
		return x.NexusUuid
	}
	return ""
}

func (x *PauseRebuildRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type PauseRebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *PauseRebuildResponse) Reset() {
	*x = PauseRebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PauseRebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PauseRebuildResponse) ProtoMessage() {}

func (x *PauseRebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PauseRebuildResponse.ProtoReflect.Descriptor instead.
func (*PauseRebuildResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{39}
}

func (x *PauseRebuildResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

type ResumeRebuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NexusUuid string `protobuf:"bytes,1,opt,name=nexus_uuid,json=nexusUuid,proto3" json:"nexus_uuid,omitempty"` // uuid of the nexus
	Uri       string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`                              // uri of the destination child
}

func (x *ResumeRebuildRequest) Reset() {
	*x = ResumeRebuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeRebuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeRebuildRequest) ProtoMessage() {}

func (x *ResumeRebuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeRebuildRequest.ProtoReflect.Descriptor instead.
func (*ResumeRebuildRequest) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{40}
}

func (x *ResumeRebuildRequest) GetNexusUuid() string {
	if x != nil {
		return x.NexusUuid
	}
	return ""
}

func (x *ResumeRebuildRequest) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type ResumeRebuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nexus *Nexus `protobuf:"bytes,1,opt,name=nexus,proto3" json:"nexus,omitempty"`
}

func (x *ResumeRebuildResponse) Reset() {
	*x = ResumeRebuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nexus_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResumeRebuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeRebuildResponse) ProtoMessage() {}

func (x *ResumeRebuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nexus_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeRebuildResponse.ProtoReflect.Descriptor instead.
func (*ResumeRebuildResponse) Descriptor() ([]byte, []int) {
	return file_nexus_proto_rawDescGZIP(), []int{41}
}

func (x *ResumeRebuildResponse) GetNexus() *Nexus {
	if x != nil {
		return x.Nexus
	}
	return nil
}

var File_nexus_proto protoreflect.FileDescriptor

var file_nexus_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d,
	0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9a, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e,
	0x43, 0x6e, 0x74, 0x6c, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x43, 0x6e, 0x74, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x43, 0x6e,
	0x74, 0x6c, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x43,
	0x6e, 0x74, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x76, 0x4b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x73, 0x76, 0x4b, 0x65, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x4b, 0x65, 0x79, 0x12,
	0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x76, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x76, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x76, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x46,
	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x4e, 0x76, 0x6d, 0x65, 0x50, 0x72, 0x65,
	0x65, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x65, 0x6d, 0x70, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x73, 0x76, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xce, 0x02, 0x0a, 0x05, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x2d, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x40,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x43, 0x0a, 0x0f, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f, 0x69, 0x6f,
	0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x49,
	0x6f, 0x4c, 0x6f, 0x67, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x05, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x61, 0x79, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61,
	0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x6e, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x08, 0x61, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74,
	0x73, 0x22, 0x3f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x22, 0x41, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65,
	0x78, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x16, 0x55,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22,
	0x43, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x4e, 0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e,
	0x65, 0x78, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x29, 0x0a, 0x13,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x14, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x15, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x4e,
	0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61,
	0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52,
	0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22, 0x5a, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x68, 0x69,
	0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6e, 0x6f, 0x72, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x22, 0x3f, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x22, 0x3e, 0x0a, 0x16, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x22, 0x43, 0x0a, 0x17, 0x46, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x48, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x40, 0x0a,
	0x14, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22,
	0x2b, 0x0a, 0x15, 0x55, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x76, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x76, 0x6d, 0x65, 0x41,
	0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x22, 0x51, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x61, 0x6e, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x61, 0x6e, 0x61,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x64, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x4e, 0x76, 0x6d, 0x65,
	0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x61, 0x6e, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x08, 0x61, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x7a, 0x0a, 0x15, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x42, 0x0a, 0x16, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x13, 0x52,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x22, 0x2c, 0x0a, 0x14, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x46, 0x0a, 0x13, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0xbf, 0x03, 0x0a, 0x14, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x12, 0x2d, 0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x50, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0c, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x8c, 0x02, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x1a, 0x61, 0x0a, 0x0e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x16, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x22, 0x80, 0x04, 0x0a, 0x14, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x55, 0x72, 0x69, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x72, 0x63,
	0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x72, 0x63, 0x55,
	0x72, 0x69, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x72, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x26,
	0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x50,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x40,
	0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73,
	0x22, 0x45, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x3f, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75,
	0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x13, 0x50, 0x61, 0x75, 0x73,
	0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69,
	0x22, 0x40, 0x0a, 0x14, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78,
	0x75, 0x73, 0x22, 0x47, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65,
	0x78, 0x75, 0x73, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x65, 0x78, 0x75, 0x73, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x41, 0x0a, 0x15, 0x52,
	0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x05, 0x6e, 0x65, 0x78, 0x75, 0x73, 0x2a, 0x2d,
	0x0a, 0x13, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x4e, 0x76, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x65, 0x6d,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x72, 0x67, 0x4b, 0x65, 0x79, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x10, 0x01, 0x2a, 0xb8, 0x01,
	0x0a, 0x0f, 0x4e, 0x76, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x12, 0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x52, 0x65, 0x67, 0x73, 0x4f, 0x6e,
	0x6c, 0x79, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x67, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x10,
	0x04, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x73,
	0x69, 0x76, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x67, 0x73, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x76, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x67, 0x73, 0x10, 0x06, 0x2a, 0x70, 0x0a, 0x0a, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f,
	0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x48, 0x49, 0x4c, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x47, 0x52, 0x41, 0x44, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xae, 0x03, 0x0a, 0x10, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x17, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17,
	0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x48, 0x49,
	0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x48, 0x49, 0x4c,
	0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x43,
	0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21,
	0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x42, 0x55, 0x49, 0x4c,
	0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x48,
	0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e,
	0x5f, 0x49, 0x4f, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x06, 0x12, 0x20, 0x0a,
	0x1c, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12,
	0x22, 0x0a, 0x1e, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x59, 0x4e,
	0x43, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x5f, 0x53, 0x50, 0x41,
	0x43, 0x45, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x44,
	0x5f, 0x4f, 0x55, 0x54, 0x10, 0x0a, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0b, 0x2a, 0x85, 0x01, 0x0a, 0x0a,
	0x4e, 0x65, 0x78, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x45,
	0x58, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x5f, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x47, 0x52, 0x41, 0x44, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x5f,
	0x53, 0x48, 0x55, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x12,
	0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x5f, 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57,
	0x4e, 0x10, 0x05, 0x2a, 0xca, 0x01, 0x0a, 0x0c, 0x4e, 0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x56, 0x4d, 0x45, 0x5f, 0x41, 0x4e, 0x41,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00,
	0x12, 0x1c, 0x0a, 0x18, 0x4e, 0x56, 0x4d, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x5f, 0x4f, 0x50, 0x54,
	0x49, 0x4d, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x20,
	0x0a, 0x1c, 0x4e, 0x56, 0x4d, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x4f,
	0x50, 0x54, 0x49, 0x4d, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x56, 0x4d, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x5f, 0x49, 0x4e, 0x41,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10,
	0x03, 0x12, 0x22, 0x0a, 0x1e, 0x4e, 0x56, 0x4d, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x5f, 0x50, 0x45,
	0x52, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x4f, 0x53, 0x53, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x56, 0x4d, 0x45, 0x5f, 0x41, 0x4e,
	0x41, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x0f,
	0x2a, 0x4e, 0x0a, 0x0b, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x61, 0x75, 0x6c,
	0x74, 0x49, 0x4f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x10, 0x03,
	0x2a, 0x5f, 0x0a, 0x0f, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4a, 0x6f, 0x62, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x0e, 0x0a,
	0x0a, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10,
	0x05, 0x32, 0x99, 0x0e, 0x0a, 0x08, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x70, 0x63, 0x12, 0x52,
	0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x1f, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4e, 0x65, 0x78,
	0x75, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x6d, 0x61,
	0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65,
	0x78, 0x75, 0x73, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x65, 0x78,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x21, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x46, 0x61, 0x75,
	0x6c, 0x74, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x23, 0x2e, 0x6d,
	0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x61, 0x75, 0x6c, 0x74,
	0x4e, 0x65, 0x78, 0x75, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x53, 0x68, 0x75,
	0x74, 0x64, 0x6f, 0x77, 0x6e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77,
	0x6e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x75, 0x74,
	0x64, 0x6f, 0x77, 0x6e, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65,
	0x78, 0x75, 0x73, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x55, 0x6e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x12, 0x22, 0x2e, 0x6d,
	0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4e, 0x65, 0x78, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x76,
	0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x76, 0x6d, 0x65,
	0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x4e, 0x76,
	0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x76, 0x6d, 0x65,
	0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x74, 0x4e, 0x76, 0x6d, 0x65, 0x41, 0x6e, 0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0e, 0x43, 0x68, 0x69, 0x6c, 0x64,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x79, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x70, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1f, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x61,
	0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x55, 0x0a, 0x0c, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x20, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x21, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x20, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x6d, 0x61, 0x79, 0x61,
	0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x79,
	0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x62,
	0x75, 0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2d, 0x5a,
	0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x62, 0x73, 0x2f, 0x6d, 0x61, 0x79, 0x61, 0x73, 0x74, 0x6f, 0x72, 0x2d, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nexus_proto_rawDescOnce sync.Once
	file_nexus_proto_rawDescData = file_nexus_proto_rawDesc
)

func file_nexus_proto_rawDescGZIP() []byte {
	file_nexus_proto_rawDescOnce.Do(func() {
		file_nexus_proto_rawDescData = protoimpl.X.CompressGZIP(file_nexus_proto_rawDescData)
	})
	return file_nexus_proto_rawDescData
}

var file_nexus_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_nexus_proto_msgTypes = make([]protoimpl.MessageInfo, 43)
var file_nexus_proto_goTypes = []interface{}{
	(NexusNvmePreemption)(0),           // 0: mayastor.v1.NexusNvmePreemption
	(NvmeReservation)(0),               // 1: mayastor.v1.NvmeReservation
	(ChildState)(0),                    // 2: mayastor.v1.ChildState
	(ChildStateReason)(0),              // 3: mayastor.v1.ChildStateReason
	(NexusState)(0),                    // 4: mayastor.v1.NexusState
	(NvmeAnaState)(0),                  // 5: mayastor.v1.NvmeAnaState
	(ChildAction)(0),                   // 6: mayastor.v1.ChildAction
	(RebuildJobState)(0),               // 7: mayastor.v1.RebuildJobState
	(*CreateNexusRequest)(nil),         // 8: mayastor.v1.CreateNexusRequest
	(*Child)(nil),                      // 9: mayastor.v1.Child
	(*Nexus)(nil),                      // 10: mayastor.v1.Nexus
	(*CreateNexusResponse)(nil),        // 11: mayastor.v1.CreateNexusResponse
	(*AddChildNexusResponse)(nil),      // 12: mayastor.v1.AddChildNexusResponse
	(*RemoveChildNexusResponse)(nil),   // 13: mayastor.v1.RemoveChildNexusResponse
	(*UnpublishNexusResponse)(nil),     // 14: mayastor.v1.UnpublishNexusResponse
	(*SetNvmeAnaStateResponse)(nil),    // 15: mayastor.v1.SetNvmeAnaStateResponse
	(*ListNexusResponse)(nil),          // 16: mayastor.v1.ListNexusResponse
	(*DestroyNexusRequest)(nil),        // 17: mayastor.v1.DestroyNexusRequest
	(*ShutdownNexusRequest)(nil),       // 18: mayastor.v1.ShutdownNexusRequest
	(*ShutdownNexusResponse)(nil),      // 19: mayastor.v1.ShutdownNexusResponse
	(*AddChildNexusRequest)(nil),       // 20: mayastor.v1.AddChildNexusRequest
	(*RemoveChildNexusRequest)(nil),    // 21: mayastor.v1.RemoveChildNexusRequest
	(*FaultNexusChildRequest)(nil),     // 22: mayastor.v1.FaultNexusChildRequest
	(*FaultNexusChildResponse)(nil),    // 23: mayastor.v1.FaultNexusChildResponse
	(*PublishNexusRequest)(nil),        // 24: mayastor.v1.PublishNexusRequest
	(*PublishNexusResponse)(nil),       // 25: mayastor.v1.PublishNexusResponse
	(*UnpublishNexusRequest)(nil),      // 26: mayastor.v1.UnpublishNexusRequest
	(*ListNexusOptions)(nil),           // 27: mayastor.v1.ListNexusOptions
	(*GetNvmeAnaStateRequest)(nil),     // 28: mayastor.v1.GetNvmeAnaStateRequest
	(*GetNvmeAnaStateResponse)(nil),    // 29: mayastor.v1.GetNvmeAnaStateResponse
	(*SetNvmeAnaStateRequest)(nil),     // 30: mayastor.v1.SetNvmeAnaStateRequest
	(*ChildOperationRequest)(nil),      // 31: mayastor.v1.ChildOperationRequest
	(*ChildOperationResponse)(nil),     // 32: mayastor.v1.ChildOperationResponse
	(*RebuildStateRequest)(nil),        // 33: mayastor.v1.RebuildStateRequest
	(*RebuildStateResponse)(nil),       // 34: mayastor.v1.RebuildStateResponse
	(*RebuildStatsRequest)(nil),        // 35: mayastor.v1.RebuildStatsRequest
	(*RebuildStatsResponse)(nil),       // 36: mayastor.v1.RebuildStatsResponse
	(*ListRebuildHistoryRequest)(nil),  // 37: mayastor.v1.ListRebuildHistoryRequest
	(*RebuildHistoryRequest)(nil),      // 38: mayastor.v1.RebuildHistoryRequest
	(*ListRebuildHistoryResponse)(nil), // 39: mayastor.v1.ListRebuildHistoryResponse
	(*RebuildHistoryResponse)(nil),     // 40: mayastor.v1.RebuildHistoryResponse
	(*RebuildHistoryRecord)(nil),       // 41: mayastor.v1.RebuildHistoryRecord
	(*StartRebuildRequest)(nil),        // 42: mayastor.v1.StartRebuildRequest
	(*StartRebuildResponse)(nil),       // 43: mayastor.v1.StartRebuildResponse
	(*StopRebuildRequest)(nil),         // 44: mayastor.v1.StopRebuildRequest
	(*StopRebuildResponse)(nil),        // 45: mayastor.v1.StopRebuildResponse
	(*PauseRebuildRequest)(nil),        // 46: mayastor.v1.PauseRebuildRequest
	(*PauseRebuildResponse)(nil),       // 47: mayastor.v1.PauseRebuildResponse
	(*ResumeRebuildRequest)(nil),       // 48: mayastor.v1.ResumeRebuildRequest
	(*ResumeRebuildResponse)(nil),      // 49: mayastor.v1.ResumeRebuildResponse
	nil,                                // 50: mayastor.v1.ListRebuildHistoryResponse.HistoriesEntry
	(*timestamppb.Timestamp)(nil),      // 51: google.protobuf.Timestamp
	(ShareProtocol)(0),                 // 52: mayastor.v1.ShareProtocol
	(*wrapperspb.StringValue)(nil),     // 53: google.protobuf.StringValue
	(*emptypb.Empty)(nil),              // 54: google.protobuf.Empty
}
var file_nexus_proto_depIdxs = []int32{
	1,  // 0: mayastor.v1.CreateNexusRequest.resvType:type_name -> mayastor.v1.NvmeReservation
	0,  // 1: mayastor.v1.CreateNexusRequest.preemptPolicy:type_name -> mayastor.v1.NexusNvmePreemption
	2,  // 2: mayastor.v1.Child.state:type_name -> mayastor.v1.ChildState
	3,  // 3: mayastor.v1.Child.state_reason:type_name -> mayastor.v1.ChildStateReason
	51, // 4: mayastor.v1.Child.fault_timestamp:type_name -> google.protobuf.Timestamp
	4,  // 5: mayastor.v1.Nexus.state:type_name -> mayastor.v1.NexusState
	9,  // 6: mayastor.v1.Nexus.children:type_name -> mayastor.v1.Child
	5,  // 7: mayastor.v1.Nexus.ana_state:type_name -> mayastor.v1.NvmeAnaState
	10, // 8: mayastor.v1.CreateNexusResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 9: mayastor.v1.AddChildNexusResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 10: mayastor.v1.RemoveChildNexusResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 11: mayastor.v1.UnpublishNexusResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 12: mayastor.v1.SetNvmeAnaStateResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 13: mayastor.v1.ListNexusResponse.nexus_list:type_name -> mayastor.v1.Nexus
	10, // 14: mayastor.v1.ShutdownNexusResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 15: mayastor.v1.FaultNexusChildResponse.nexus:type_name -> mayastor.v1.Nexus
	52, // 16: mayastor.v1.PublishNexusRequest.share:type_name -> mayastor.v1.ShareProtocol
	10, // 17: mayastor.v1.PublishNexusResponse.nexus:type_name -> mayastor.v1.Nexus
	53, // 18: mayastor.v1.ListNexusOptions.name:type_name -> google.protobuf.StringValue
	53, // 19: mayastor.v1.ListNexusOptions.uuid:type_name -> google.protobuf.StringValue
	5,  // 20: mayastor.v1.GetNvmeAnaStateResponse.ana_state:type_name -> mayastor.v1.NvmeAnaState
	5,  // 21: mayastor.v1.SetNvmeAnaStateRequest.ana_state:type_name -> mayastor.v1.NvmeAnaState
	6,  // 22: mayastor.v1.ChildOperationRequest.action:type_name -> mayastor.v1.ChildAction
	10, // 23: mayastor.v1.ChildOperationResponse.nexus:type_name -> mayastor.v1.Nexus
	51, // 24: mayastor.v1.RebuildStatsResponse.start_time:type_name -> google.protobuf.Timestamp
	51, // 25: mayastor.v1.ListRebuildHistoryRequest.since_end_time:type_name -> google.protobuf.Timestamp
	50, // 26: mayastor.v1.ListRebuildHistoryResponse.histories:type_name -> mayastor.v1.ListRebuildHistoryResponse.HistoriesEntry
	51, // 27: mayastor.v1.ListRebuildHistoryResponse.end_time:type_name -> google.protobuf.Timestamp
	41, // 28: mayastor.v1.RebuildHistoryResponse.records:type_name -> mayastor.v1.RebuildHistoryRecord
	7,  // 29: mayastor.v1.RebuildHistoryRecord.state:type_name -> mayastor.v1.RebuildJobState
	51, // 30: mayastor.v1.RebuildHistoryRecord.start_time:type_name -> google.protobuf.Timestamp
	51, // 31: mayastor.v1.RebuildHistoryRecord.end_time:type_name -> google.protobuf.Timestamp
	10, // 32: mayastor.v1.StartRebuildResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 33: mayastor.v1.StopRebuildResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 34: mayastor.v1.PauseRebuildResponse.nexus:type_name -> mayastor.v1.Nexus
	10, // 35: mayastor.v1.ResumeRebuildResponse.nexus:type_name -> mayastor.v1.Nexus
	40, // 36: mayastor.v1.ListRebuildHistoryResponse.HistoriesEntry.value:type_name -> mayastor.v1.RebuildHistoryResponse
	8,  // 37: mayastor.v1.NexusRpc.CreateNexus:input_type -> mayastor.v1.CreateNexusRequest
	17, // 38: mayastor.v1.NexusRpc.DestroyNexus:input_type -> mayastor.v1.DestroyNexusRequest
	27, // 39: mayastor.v1.NexusRpc.ListNexus:input_type -> mayastor.v1.ListNexusOptions
	20, // 40: mayastor.v1.NexusRpc.AddChildNexus:input_type -> mayastor.v1.AddChildNexusRequest
	21, // 41: mayastor.v1.NexusRpc.RemoveChildNexus:input_type -> mayastor.v1.RemoveChildNexusRequest
	22, // 42: mayastor.v1.NexusRpc.FaultNexusChild:input_type -> mayastor.v1.FaultNexusChildRequest
	18, // 43: mayastor.v1.NexusRpc.ShutdownNexus:input_type -> mayastor.v1.ShutdownNexusRequest
	24, // 44: mayastor.v1.NexusRpc.PublishNexus:input_type -> mayastor.v1.PublishNexusRequest
	26, // 45: mayastor.v1.NexusRpc.UnpublishNexus:input_type -> mayastor.v1.UnpublishNexusRequest
	28, // 46: mayastor.v1.NexusRpc.GetNvmeAnaState:input_type -> mayastor.v1.GetNvmeAnaStateRequest
	30, // 47: mayastor.v1.NexusRpc.SetNvmeAnaState:input_type -> mayastor.v1.SetNvmeAnaStateRequest
	31, // 48: mayastor.v1.NexusRpc.ChildOperation:input_type -> mayastor.v1.ChildOperationRequest
	42, // 49: mayastor.v1.NexusRpc.StartRebuild:input_type -> mayastor.v1.StartRebuildRequest
	44, // 50: mayastor.v1.NexusRpc.StopRebuild:input_type -> mayastor.v1.StopRebuildRequest
	46, // 51: mayastor.v1.NexusRpc.PauseRebuild:input_type -> mayastor.v1.PauseRebuildRequest
	48, // 52: mayastor.v1.NexusRpc.ResumeRebuild:input_type -> mayastor.v1.ResumeRebuildRequest
	33, // 53: mayastor.v1.NexusRpc.GetRebuildState:input_type -> mayastor.v1.RebuildStateRequest
	35, // 54: mayastor.v1.NexusRpc.GetRebuildStats:input_type -> mayastor.v1.RebuildStatsRequest
	38, // 55: mayastor.v1.NexusRpc.GetRebuildHistory:input_type -> mayastor.v1.RebuildHistoryRequest
	37, // 56: mayastor.v1.NexusRpc.ListRebuildHistory:input_type -> mayastor.v1.ListRebuildHistoryRequest
	11, // 57: mayastor.v1.NexusRpc.CreateNexus:output_type -> mayastor.v1.CreateNexusResponse
	54, // 58: mayastor.v1.NexusRpc.DestroyNexus:output_type -> google.protobuf.Empty
	16, // 59: mayastor.v1.NexusRpc.ListNexus:output_type -> mayastor.v1.ListNexusResponse
	12, // 60: mayastor.v1.NexusRpc.AddChildNexus:output_type -> mayastor.v1.AddChildNexusResponse
	13, // 61: mayastor.v1.NexusRpc.RemoveChildNexus:output_type -> mayastor.v1.RemoveChildNexusResponse
	23, // 62: mayastor.v1.NexusRpc.FaultNexusChild:output_type -> mayastor.v1.FaultNexusChildResponse
	19, // 63: mayastor.v1.NexusRpc.ShutdownNexus:output_type -> mayastor.v1.ShutdownNexusResponse
	25, // 64: mayastor.v1.NexusRpc.PublishNexus:output_type -> mayastor.v1.PublishNexusResponse
	14, // 65: mayastor.v1.NexusRpc.UnpublishNexus:output_type -> mayastor.v1.UnpublishNexusResponse
	29, // 66: mayastor.v1.NexusRpc.GetNvmeAnaState:output_type -> mayastor.v1.GetNvmeAnaStateResponse
	15, // 67: mayastor.v1.NexusRpc.SetNvmeAnaState:output_type -> mayastor.v1.SetNvmeAnaStateResponse
	32, // 68: mayastor.v1.NexusRpc.ChildOperation:output_type -> mayastor.v1.ChildOperationResponse
	43, // 69: mayastor.v1.NexusRpc.StartRebuild:output_type -> mayastor.v1.StartRebuildResponse
	45, // 70: mayastor.v1.NexusRpc.StopRebuild:output_type -> mayastor.v1.StopRebuildResponse
	47, // 71: mayastor.v1.NexusRpc.PauseRebuild:output_type -> mayastor.v1.PauseRebuildResponse
	49, // 72: mayastor.v1.NexusRpc.ResumeRebuild:output_type -> mayastor.v1.ResumeRebuildResponse
	34, // 73: mayastor.v1.NexusRpc.GetRebuildState:output_type -> mayastor.v1.RebuildStateResponse
	36, // 74: mayastor.v1.NexusRpc.GetRebuildStats:output_type -> mayastor.v1.RebuildStatsResponse
	40, // 75: mayastor.v1.NexusRpc.GetRebuildHistory:output_type -> mayastor.v1.RebuildHistoryResponse
	39, // 76: mayastor.v1.NexusRpc.ListRebuildHistory:output_type -> mayastor.v1.ListRebuildHistoryResponse
	57, // [57:77] is the sub-list for method output_type
	37, // [37:57] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_nexus_proto_init() }
func file_nexus_proto_init() {
	if File_nexus_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nexus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNexusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Child); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nexus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNexusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChildNexusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChildNexusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishNexusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNvmeAnaStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNexusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestroyNexusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownNexusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShutdownNexusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddChildNexusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveChildNexusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultNexusChildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FaultNexusChildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishNexusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishNexusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnpublishNexusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNexusOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNvmeAnaStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNvmeAnaStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNvmeAnaStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRebuildHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRebuildHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebuildHistoryRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseRebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PauseRebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeRebuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nexus_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResumeRebuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nexus_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_nexus_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_nexus_proto_msgTypes[29].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nexus_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   43,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nexus_proto_goTypes,
		DependencyIndexes: file_nexus_proto_depIdxs,
		EnumInfos:         file_nexus_proto_enumTypes,
		MessageInfos:      file_nexus_proto_msgTypes,
	}.Build()
	File_nexus_proto = out.File
	file_nexus_proto_rawDesc = nil
	file_nexus_proto_goTypes = nil
	file_nexus_proto_depIdxs = nil
}
